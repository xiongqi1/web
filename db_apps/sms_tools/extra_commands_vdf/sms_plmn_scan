#!/usr/bin/awk -f

function exec(mycmd) {
value="";
	while(mycmd | getline) {
		value = sprintf("%s%s", value, $0);
	}
	close(mycmd);
	return value;
}

function decode_band(mytype) {
	atcns_if=exec("rdb_get wwan.0.if");
	if (atcns_if == "cns") {
		len=split( "Unknown,GSM (2G),DCS,GSM DCS,PCS,GSM PCS,ICO,UMTS,Reserved", b, ",");
	}
	else {
		len=split( "Unknown,GSM (2G),GSM (2G),UMTS (3G),UMTS/HSDPA (3G),UMTS/HSUPA (3G),HSDPA+HSUPA (3G),UMTS (3G),DC-HSPA+,LTE (4G)", a, ",");
	}
	if( mytype>len )
		mytype=0;
	return b[mytype+1];
}

function fini(en_cmd, dodStatus) {
	# Re-enable the profile
	if (en_cmd != "") {
		exec(en_cmd " 1");
	}
	if ( dodStatus=="1" ) {
		system("sleep 2");
		for( i=0; i<5; i++) {
			system("diald-ctrl.sh up && sleep 5");
			if ( exec("rdb_get dialondemand.status")=="1" ) {
				break;
			}
		}
	}
	exit (0);
}

BEGIN {

	if( ARGC>=2 && ARGV[1]=="help" ) {
		print "This AWK script is used by SMS tools to do a manual scan of"
        print "available networks.  To do this any active profiles will be"
        print "disabled."
		print "WARNING: Using this command may cause loss of network connectivity, and may ruin internal system state."
        print ""
        print "Output is composed of a semi-colon separated list of networks"
        print "in the following format:"
        print "MCC, MNC, NetworkType (2G/3G), Network Name, Operator Status"
		exit (0);
	}

	FS = "&";
	TIMER_VAR=3;
	timeout=3*60;
	timer=0;

	sim_status=exec("rdb_get wwan.0.sim.status.status");
	if(sim_status!="SIM OK") {
		print "SIM status error! "sim_status;
		exit (0);
	}

	dodStatus = exec("rdb_get dialondemand.status");

	# Disable any profile if it is enabled
	en_cmd="";
	for (i=1; i<=6; i++) {
		cmd="rdb_get link.profile."i".enable"
		if(exec(cmd)=="1") {
			en_cmd="rdb_set link.profile."i".enable"
			exec(en_cmd " 0");
			system("sleep 10");
			break;
		}
	}

	system("sleep 2 && rdb_set wwan.0.PLMN.cmd.status && rdb_set wwan.0.PLMN_command_state 1");

	while( timer < timeout ) {
		system ( "sleep "TIMER_VAR );
		timer+=TIMER_VAR;

		cmd_status=exec("rdb_get wwan.0.PLMN.cmd.status");
		if(cmd_status=="[done]") {
			cmd = "rdb_get wwan.0.PLMN_list"
			if (cmd | getline) {
				#print $0;
				for(i=1; i<=NF; i++) {
					if(split($i, a, ",")==5) {
						#rearrange the order to MCC, MNC, NetworkType (2G/3G), Network Name, Operator Status
						if(i==1) {
							print a[2] "," a[3] "," a[5] "," a[1] "," a[4];
						}
						else {
							print ";" a[2] "," a[3] "," a[5] "," a[1] "," a[4];
						}
					}
				}
				close (cmd);
				fini(en_cmd, dodStatus);
			}
			close (cmd);
		}
		else if(index(cmd_status, "error")>0) {
			print "Command has failed."
			fini(en_cmd, dodStatus);
		}
	}
	print "Command timed out.";
	fini(en_cmd, dodStatus);
}
