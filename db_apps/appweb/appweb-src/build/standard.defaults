#
#	standard.defaults -- Release configuration settings when building 
#		Mbedthis AppWeb from source.
#
#	Copyright (c) Mbedthis Software LLC, 2003-2007. All Rights Reserved.
#
#	These initial defaults are read by configure when first creating the
#	configuration files: buildConfig.make, buildConfig.sh and buildConfig.h
#	If a different defaults file is specifed, this file may be read and then
#	be overridden by the original defaults file.
#
###############################################################################
#	Primary Configuration Section
###############################################################################

BLD_TYPE="DEBUG" 						# The build type: (DEBUG), (RELEASE)
BLD_DEFAULTS="standard"					# Name of this defaults file
BLD_PACKAGES="" 						# List of external packages
BLD_DEBUG=1								# Set to 1 if DEBUG
BLD_CLEAN_INSTALL=0						# Overwrite existing installations
BLD_APPWEB_CONFIG=standard.conf
BLD_APPWEB=1
BLD_LICENSE=gpl
BLD_COMMERCIAL=0

###############################################################################
#	Optional Features Section
###############################################################################
#
#	Enable request access logging
#
BLD_FEATURE_ACCESS_LOG=1

#
#	Turn assert checking on. Good for a debug build
#
BLD_FEATURE_ASSERT=0

#
#	Enable parsing of configuration files
#
BLD_FEATURE_CONFIG_PARSE=1

#
#	Enable saving of configuration files
#
BLD_FEATURE_CONFIG_SAVE=0

#
#	Enable cookie parsing and setting
#
BLD_FEATURE_COOKIE=1

#
#	Enable digest authentication
#
BLD_FEATURE_DIGEST=1

#
#	Compile in the ability to dynamically load modules (DLLs)
#
BLD_FEATURE_DLL=1

#
#	Enable documentation
#
BLD_FEATURE_DOC=0

#
#	Enable keep-alive support. AppWeb will work fine (but quite a bit 
#	slower) without this enabled.
#
BLD_FEATURE_KEEP_ALIVE=1

#
#	Enable If-Modified headers. AppWeb will work fine (but quite a
#	bit slower) without this enabled.
#
BLD_FEATURE_IF_MODIFIED=1

#
#	Don't use the standard libstdc++ by default on linux. The Mpr supplies
#	a much smaller built in version.
#
if [ "${BLD_HOST_OS}" = "WIN" -o "${BLD_HOST_OS}" = "VXWORKS" ] ; then
	BLD_FEATURE_STDCPP=1
else
	BLD_FEATURE_STDCPP=0
fi

#
#	Build with the ASP.NET module on Windows only
#
if [ "${BLD_HOST_OS}" = "WIN" ]
then
	BLD_FEATURE_ASPNET_MODULE=0
	BLD_FEATURE_ASPNET_MODULE_BUILTIN=0
	BLD_FEATURE_ASPNET_MODULE_LOADABLE=0
else
	BLD_FEATURE_ASPNET_MODULE=0
	BLD_FEATURE_ASPNET_MODULE_BUILTIN=0
	BLD_FEATURE_ASPNET_MODULE_LOADABLE=0
fi

#
#	Enable the Legacy code for backward compatibility (back one major revision).
#
BLD_FEATURE_LEGACY_API=0

#
#	Enable license checking
#
BLD_FEATURE_LICENSE=0

#
#	Enable the MPR logging facility. Useful if debugging.
#
BLD_FEATURE_LOG=1

#
#	Use Mbedthis Fast Malloc. This is about 25% faster and a bit more code 
#	than the standard malloc.
#
BLD_FEATURE_MALLOC=0

#
#	Output memory statistics when required. Some programs support "-m" to dump
#	memory statistics.
#
BLD_FEATURE_MALLOC_STATS=0

#
#	Output detailed memory leak on program exit (Use -m).
#
BLD_FEATURE_MALLOC_LEAK=0

#
#	Replace the standard malloc/free/realloc/calloc/new/delete routines
#
BLD_FEATURE_MALLOC_HOOK=0

#
#	Compile multi-threaded
#
BLD_FEATURE_MULTITHREAD=1

#
#	Default numeric type. Used by Embedded JavaScript and Embedded Server Pages
#
BLD_FEATURE_NUM_TYPE=int
BLD_FEATURE_NUM_TYPE_ID=MPR_TYPE_INT

#
#	Build with HTTP/1.1 ranged request support
#
BLD_FEATURE_RANGES=1

#
#	Run from a ROM file system. Only use this for deeply embedded projects 
#	without a file system.
#
BLD_FEATURE_ROMFS=0

#
#	Run as a service / daemon. Only used by the AppWeb program. The MPR does
#	get a bit bigger.
#
BLD_FEATURE_RUN_AS_SERVICE=1

#
#	Warn if unsafe C/C++ constructs are used (like printf)
#
BLD_FEATURE_SAFE_STRINGS=0

#
#	Build small. Set to zero for maximum speed.
#
BLD_FEATURE_SQUEEZE=0

#
#	Enable session management
#
BLD_FEATURE_SESSION=1

#
#	Build libraries as shared libraries or as static libraries
#
BLD_FEATURE_SHARED=1
BLD_FEATURE_STATIC=1

#
#	Link with a static system libc. Warning: this does not work effectively
#	with glibc because of references to libnss. Try uClibc if you want this.
#
BLD_FEATURE_STATIC_LINK_LIBC=0

################################################################################
#	Handlers and Modules Section
################################################################################
#
#	Admin handler
#
BLD_FEATURE_ADMIN_MODULE=1

#
#	Enable authorization checking
#
BLD_FEATURE_AUTH_MODULE=1

#
#	Support a C language API in addition to the C++ API.
#
BLD_FEATURE_C_API_MODULE=1

#
#	Support a C language API in for the HTTP client
#
BLD_FEATURE_C_API_CLIENT=1

#
#	Ability to run commands (processes). Necessary if you want to use CGI
#
BLD_FEATURE_CGI_MODULE=1

#
#	Directory listings
#
BLD_FEATURE_DIR_MODULE=1

#
#	Turn on the GoAhead WebServer API compatibility. Only necessary if you have
#	GoAhead WebServer implementation you want to migrate. 
#
BLD_FEATURE_GACOMPAT_MODULE=0

#
#	Copy page handler
#
BLD_FEATURE_COPY_MODULE=1

#
#	Embedded gateway interface (in-process CGI)
#
BLD_FEATURE_EGI_MODULE=1

#
#	Embedded JavaScript
#
BLD_FEATURE_EJS=1

#
#	Embedded Server Pages
#
BLD_FEATURE_ESP_MODULE=1

#
#	Evaluation period if license checking is enabled
#
BLD_FEATURE_EVAL_PERIOD=30

#
#	Floating point support
#
BLD_FEATURE_FLOATING_POINT=1

#
#	IPV6 support
#
BLD_FEATURE_IPV6=0

#
#	Put module listings
#
BLD_FEATURE_PUT_MODULE=1

#
#	Ranged transfers
#
BLD_FEATURE_RANGES=1

#
#	Build the samples
#
BLD_FEATURE_SAMPLES=1

#
#	Enable the SSL abstraction layer. The mpr and http modules both use this.
#
BLD_FEATURE_SSL_MODULE=1

#
#	Enable the Upload handler
#
BLD_FEATURE_UPLOAD_MODULE=1

#
#	Build the test suite
#
BLD_FEATURE_TEST=0

#
#	Enable the Xml Database (XDB)
#
BLD_FEATURE_XDB_MODULE=0

################################################################################
#	Loadable vs Builtin Module Section
################################################################################
#
#	Define which modules should be builtin and which should be loadable.
#	The build system can build both builtin and as a module for those who
#	need to distribute systems both ways.
#	Builtins load much quicker, run slightly faster and are a bit smaller.
#

BLD_FEATURE_AUTH_MODULE_BUILTIN=0
BLD_FEATURE_ADMIN_MODULE_BUILTIN=0
BLD_FEATURE_C_API_MODULE_BUILTIN=0
BLD_FEATURE_CGI_MODULE_BUILTIN=0
BLD_FEATURE_DIR_MODULE_BUILTIN=0
BLD_FEATURE_GACOMPAT_MODULE_BUILTIN=0
BLD_FEATURE_COPY_MODULE_BUILTIN=0
BLD_FEATURE_EGI_MODULE_BUILTIN=0
BLD_FEATURE_ESP_MODULE_BUILTIN=0
BLD_FEATURE_PUT_MODULE_BUILTIN=0
BLD_FEATURE_SSL_MODULE_BUILTIN=0
BLD_FEATURE_UPLOAD_MODULE_BUILTIN=0
BLD_FEATURE_XDB_MODULE_BUILTIN=0

BLD_FEATURE_AUTH_MODULE_LOADABLE=1
BLD_FEATURE_ADMIN_MODULE_LOADABLE=1
BLD_FEATURE_C_API_MODULE_LOADABLE=1
BLD_FEATURE_CGI_MODULE_LOADABLE=1
BLD_FEATURE_DIR_MODULE_LOADABLE=1
BLD_FEATURE_GACOMPAT_MODULE_LOADABLE=0
BLD_FEATURE_COPY_MODULE_LOADABLE=1
BLD_FEATURE_EGI_MODULE_LOADABLE=1
BLD_FEATURE_ESP_MODULE_LOADABLE=1
BLD_FEATURE_PUT_MODULE_LOADABLE=1
BLD_FEATURE_SSL_MODULE_LOADABLE=1
BLD_FEATURE_UPLOAD_MODULE_LOADABLE=1
BLD_FEATURE_XDB_MODULE_LOADABLE=0

################################################################################
#
#	Include settings common to all AppWeb configurations
#

. ${BLD_TOP}/build/product.config

################################################################################
#
#	Some fixups for O/Ss
#

if [ "$BLD_HOST_OS" = VXWORKS ] ; then
	BLD_FEATURE_RUN_AS_SERVICE=0
	BLD_FEATURE_ACCESS_LOG=0
	BLD_FEATURE_CGI_MODULE=0
fi

#
#  Local variables:
#  tab-width: 4
#  c-basic-offset: 4
#  End:
#  vim: sw=4 ts=4 
#
