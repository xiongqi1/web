/*
 * This reads the strings.csv file and creates a single javascript file for each language
 * format for the created files is
 * var xlat = { "metaPhrase": "translated phrase", ...}
 */
console.log(process.argv);

var fs = require('fs');

var outDir = process.argv[3] + "/www/js/";
var webSpec = process.env.V_WEBIF_SPEC;

/*
 * Args
 *  err if the read of file failed
 *  contents is the entire CSV file
 */
function parseCSV(err, contents) {

    if (err) {
        console.log(err);
        return;
    }

    var entityMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '/': '&#x2F;',
    '`': '&#x60;',
    '=': '&#x3D;'
    };

    function escapeHtml(str) {
        return str.replace(/[&<>"'`=\/]/g, function (s) {return entityMap[s];});
    }

    var arrayOfLines = contents.match(/[^\r\n]+/g);

    function createXlat(lang, column ) {
        var data = '';
        arrayOfLines.forEach( function(ln){
            var phrases = ln.split(';')

            if( phrases.length < 3 ) {
                console.log("warning: invalid line ", ln);
                return;
            }

            var spec = phrases[1].trim();
            if((spec.indexOf("spec") >= 0) && (spec.indexOf("spec_"+webSpec) < 0)){
                return;
            }

            var translatedString = (column < phrases.length? phrases[column]: phrases[2]).trim();
            if(translatedString == "")
                return;
                //translatedString = phrases[2].trim(); // Take the english as phrase if none specified

            var key = phrases[0].trim();
            if (key == '') key = phrases[2]; // Take the english as key if none specified
            data += ',"' + key + '":"' + escapeHtml(translatedString) + '"'
        });

        var dir = outDir + lang;
        if (!fs.existsSync(dir)) fs.mkdirSync(dir);

        fs.writeFile(dir + "/xlat.js",
            '// Autogenerated file by createTranslationFiles.js\n' +
            'var xlat = {' + data.substring(1) + '};',
            function(err) {
                if(err) {
                    return console.log(err);
                }
                console.log("created "+ outDir + lang + "/xlat.js");
            });
    }

    createXlat("en", 2);
    ["ar", "fr", "de", "it", "es", "pt", "cz", "nl", "tw", "cn", "jp"].forEach(function(lang, idx){
        var env = "V_LANGUAGE_" + lang.toUpperCase();
        if (process.env[env] != "y") {
            console.log("not building translation for ", env, process.env[env]);
            return;
        }
        createXlat(lang, idx+3);
    } );
}

function genTranslationFiles(srcFile) {
  fs.readFile(srcFile, 'utf8', parseCSV);
}

genTranslationFiles(process.argv[2]);
