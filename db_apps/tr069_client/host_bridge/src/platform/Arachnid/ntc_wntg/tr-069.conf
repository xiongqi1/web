object InternetGatewayDevice {
	param DeviceSummary string notify(4,2) readonly const("InternetGatewayDevice:1.1[](Baseline:1)");

	object DeviceInfo {
		param Manufacturer string notify(0,2) readonly const("NetComm Limited");
		param ManufacturerOUI string notify(0,2) readonly const("001D85");
		param ModelName string notify(0,2) readonly persist("system.product.model", 0, "NTC-WNTU");
		param Description string notify(0,2) readonly persist("system.product.title", 0, "NetComm Cellular Router");
		param ProductClass string notify(0,2) readonly persist("system.product.class", 0, "NTC-WNTU");
		param SerialNumber string notify(0,2) readonly persist("systeminfo.mac.eth0", 0, "");
		param HardwareVersion string notify(4,2) readonly persist("version.hardware", 0, "N/A");
		param SoftwareVersion string notify(6,2) readonly persist("version.software", 0, "N/A");
		param ModemFirmwareVersion string notify(0,2) readonly persist("wwan.0.firmware_version", 0, "N/A");
		param SpecVersion string notify(4,2) readonly const("1.0");
		param ProvisioningCode string notify(6,2) readwrite persist("tr069.state.provisioning_code", 1, "");
		param UpTime uint notify(0,1) readonly dynamic('time', 0); # NTP time handler also supports UpTime
		param DeviceLog string notify(0,1) readonly const("");
	};

	object ManagementServer {
		param URL string notify(0,2) readwrite persist("tr069.server.url", 1, "http://rdm.nwas.nbn.net.au/");
#		param URL string notify(0,2) readwrite persist("tr069.server.url", 1, "http://192.168.0.41/acs/cwmp.php");
#		param URL string notify(0,2) readwrite persist("tr069.server.url", 1, "http://192.121.199.178:38080/tr069devicemanagement/tr069webservice");
		param Username string notify(0,2) readwrite persist("tr069.server.username", 1, "admin");
		param Password string notify(0,2) writeonly persist("tr069.server.password", 1, "admin");
		param PeriodicInformEnable bool notify(0,2) writeonly persist("tr069.server.periodic.enable", 1, 1);
		param PeriodicInformInterval uint notify(0,2) readwrite persist("tr069.server.periodic.interval", 1, 60);
		param PeriodicInformTime datetime notify(0,2) readwrite persist("tr069.server.periodic.time", 1, 0);
		param ParameterKey string notify(4,2) readwrite persist("tr069.server.paramkey", 1, "");
		param ConnectionRequestURL string notify(6,2) readonly dynamic('management', "");
#		param ConnectionRequestURL string notify(6,2) readonly const("http://220.233.131.78:10101/acscall");
		param ConnectionRequestUsername string notify(0,2) readwrite persist("tr069.server.request.username", 1, "dps");
		param ConnectionRequestPassword string notify(0,2) writeonly persist("tr069.server.request.password", 1, "dps");
		param UpgradesManaged bool notify(0,2) readwrite persist("tr069.server.upgrades_managed", 1, 0);
	};

	object LANConfigSecurity {
		param ConfigPassword string notify(0,2) writeonly persist("admin.user.admin", 0, "");
	};

	# Time:2 Profile
	object Time {
		param Enable bool notify(0,2) readwrite persist("service.ntp.enable", 0, 0);
		param NTPServer1 string notify(0,2) readwrite persist("service.ntp.server_1", 0, "au.pool.ntp.org");
		param NTPServer2 string notify(0,2) readwrite persist("service.ntp.server_2", 0, "pool.ntp.org");
		param NTPServer3 string notify(0,2) readwrite persist("service.ntp.server_3", 0, "");
		param NTPServer4 string notify(0,2) readwrite persist("service.ntp.server_4", 0, "");
		param NTPServer5 string notify(0,2) readwrite persist("service.ntp.server_5", 0, "");
		param CurrentLocalTime datetime notify(0,1) readonly dynamic('time', 0);
		param LocalTimeZone string notify(0,2) readonly dynamic('time', "+00:00");
		param LocalTimeZoneName string notify(0,2) readonly dynamic('time', "UTC");
	};

	object X_NETCOMM {
		object Alarms {
			param Timestamp datetime notify(2,2) readonly dynamic("alarm", 0);
			param MaximumAlarms uint notify(0,2) readwrite persist('alarmd.max_alarms', 0, 20);
			param ActiveIDs	 string  notify(2,2) readonly persist("alarms._index", 0, "");
			param Acknowledge string notify(0,2) readwrite persist('alarms.acknowledge', 0, "");

			collection Alarm dynamic('alarm', "") {
				default {
					param Raised  datetime notify(0,2) readonly dynamic('alarm', 0);
					param Cleared datetime notify(2,2) readonly dynamic('alarm', 0);
					param Subsystem string notify(0,2) readonly dynamic('alarm', "");
					param Description string notify(0,2) readonly dynamic('alarm', "");
				};
			};
		};
		object PSU {
			param OnBattery bool notify(2,2) readonly persist('psu.on_battery', 0, 0);
			param LowBattery bool notify(2,2) readonly persist('psu.low_battery', 0, 0);
			param ReplaceBattery bool notify(1,2) readonly persist('psu.replace_battery', 0, 0);
			param MissingBattery bool notify(1,2) readonly persist('psu.missing_battery', 0, 0);
		};
		object DebugInterface {
			param Enable bool notify(0,2) readwrite persist("link.profile.0.enable", 0, 0);
			param IPAddress string notify(0,2) readwrite persist("link.profile.0.address", 0, '192.168.0.60');
			param Netmask string notify(0,2) readwrite persist("link.profile.0.netmask", 0, '255.255.255.0');
			param DefaultGateway string notify(0,2) readwrite persist("link.profile.0.defaultgw", 0, '192.168.0.41');
		};
		object Radio {
			param Frequencies string notify(0,2) readwrite persist("wwan.0.earfcn", 0, "38750,38950,39150,39350");
			param ControlAPN string notify(0,2) readwrite persist("link.profile.1.apn", 0, "rdm");
			param DataAPN string notify(0,2) readwrite persist("link.profile.2.apn", 0, "access-seeker");
		};
		collection UNID dynamic('unid', "") {
			default {
				param Enable bool notify(0,2) readwrite dynamic('unid', 0);
				param Status string notify(0,2) readonly dynamic('unid', "Disabled");
				param MaxBitRate string notify(0,2) readwrite dynamic('unid', "Auto");
				param DuplexMode string notify(0,2) readwrite dynamic('unid', "Auto");
				param TaggingMode string notify(0,2) readwrite dynamic('unid', "DefaultMapped");
				object Stats {
					param BytesSent uint notify(0,1) readonly dynamic('unid', 0);
					param BytesReceived uint notify(0,1) readonly dynamic('unid', 0);
					param FramesSent uint notify(0,1) readonly dynamic('unid', 0);
					param FramesReceived uint notify(0,1) readonly dynamic('unid', 0);
					param ErrorsTX uint notify(0,1) readonly dynamic('unid', 0);
					param ErrorsRX uint notify(0,1) readonly dynamic('unid', 0);
					param RateTXAverage uint notify(0,1) readonly dynamic('unid', 0);
					param RateRXAverage uint notify(0,1) readonly dynamic('unid', 0);
					param RateTXMinimum uint notify(0,1) readonly dynamic('unid', 0);
					param RateRXMinimum uint notify(0,1) readonly dynamic('unid', 0);
					param RateTXMaximum uint notify(0,1) readonly dynamic('unid', 0);
					param RateRXMaximum uint notify(0,1) readonly dynamic('unid', 0);
					param Epoch datetime notify(0,1) readonly dynamic('unid', 0);
					param Timestamp datetime notify(0,1) readonly dynamic('unid', 0);
				};
			};
		};
		collection AVC dynamic('avc', '') {
			default {
				param Enable bool notify(0,2) readwrite dynamic('avc', 0);
				param Status string notify(0,2) readonly dynamic('avc', "Disabled");
				param ID string notify(0,2) readwrite dynamic('avc', "000000000000");
				param SmartEdgeAddress string notify(0,2) readwrite dynamic('avc', "0.0.0.0");
				param MPLSTag uint notify(0,2) readwrite dynamic('avc', 0);
				param UNID uint notify(0,2) readwrite dynamic('avc', 0);
				param VID uint notify(0,2) readwrite dynamic('avc', 0);
				param CoS uint notify(0,2) readwrite dynamic('avc', 0);
#				param DefaultTXCoS uint notify(0,2) readwrite dynamic('avc', 0);
#				param DefaultRXCoS uint notify(0,2) readwrite dynamic('avc', 0);
				param PCPToCoS string notify(0,2) readwrite dynamic('avc', "0,1,2,3,4,5,6,7");
				param DSCPToCoS string notify(0,2) readwrite dynamic('avc', "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");
				param CoSToEXP string notify(0,2) readwrite dynamic('avc', "0,1,2,3,4,5,6,7");
				param CoSToDSCP string notify(0,2) readwrite dynamic('avc', "0,0,0,16,32,40,0,0");
				param EXPToCoS string notify(0,2) readwrite dynamic('avc', "0,1,2,3,4,5,6,7");
				param CoSToPCP string notify(0,2) readwrite dynamic('avc', "0,1,2,3,4,5,6,7");
				object Stats {
					param BytesSent uint notify(0,1) readonly dynamic('avc', 0);
					param BytesReceived uint notify(0,1) readonly dynamic('avc', 0);
					param FramesSent uint notify(0,1) readonly dynamic('avc', 0);
					param FramesReceived uint notify(0,1) readonly dynamic('avc', 0);
					param Timestamp datetime notify(0,1) readonly dynamic('avc', 0);
					param PoliceBytes uint notify(0,1) readonly dynamic('avc', 0);
					param PoliceFrames uint notify(0,1) readonly dynamic('avc', 0);
					param PoliceFramesDropped uint notify(0,1) readonly dynamic('avc', 0);
					param PoliceTimestamp datetime notify(0,1) readonly dynamic('avc', 0);
					param TrunkBytesReceived uint notify(0,1) readonly dynamic('avc', 0);
					param TrunkBytesSent uint notify(0,1) readonly dynamic('avc', 0);
					param TrunkFramesReceived uint notify(0,1) readonly dynamic('avc', 0);
					param TrunkFramesSent uint notify(0,1) readonly dynamic('avc', 0);
					param TrunkTimestamp datetime notify(0,1) readonly dynamic('avc', 0);
				};
			};
		};
		object Diagnostics {
			object Capabilities {
				param DownloadTransports string notify(0,2) readonly const("HTTP");
				param UploadTransports string notify(0,2) readonly const("HTTP");

			};
			object Session{
				param Maximum uint notify(0,2) readonly const("4");
				param Download uint notify(0,2) readwrite persist("diagnostics.session.download", 0, 0);
				param Upload uint notify(0,2) readwrite persist("diagnostics.session.upload", 0, 0);
				param UDPEcho uint notify(0,2) readwrite persist("diagnostics.session.udpecho", 0, 0);
				param DownloadActiveIDs string notify(0,2) readonly dynamic('tr143',"");
				param UploadActiveIDs string notify(0,2) readonly dynamic('tr143',"");
				param UDPEchoActiveIDs string notify(0,2) readonly dynamic('tr143',"");
			};
			collection Download  dynamic('tr143', '') {
				default{
					param DiagnosticsState string notify(0,2) readwrite dynamic('tr143', "None");
					param SmartEdgeAddress string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param MPLSTag uint notify(0,2) readwrite dynamic('tr143',0);
					param CoS uint notify(0,2) readwrite dynamic('tr143',0);
					param CoSToEXP string notify(0,2) readwrite dynamic('tr143',"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,2) readwrite dynamic('tr143',"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param InterfaceNetmask string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param DownloadURL string notify(0,2) readwrite dynamic('tr143',"");
					param ROMTime datetime notify(0,2) readonly dynamic('tr143',0);
					param BOMTime datetime notify(0,2) readonly dynamic('tr143',0);
					param EOMTime datetime notify(0,2) readonly dynamic('tr143',0);
					param TestBytesReceived uint notify(0,2) readonly dynamic('tr143',0);
					param TotalBytesReceived uint notify(0,2) readonly dynamic('tr143',0);
				};
			};
			collection Upload  dynamic('tr143', ''){
				default{
					param DiagnosticsState string notify(0,2) readwrite dynamic('tr143',"None");
					param SmartEdgeAddress string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param MPLSTag uint notify(0,2) readwrite dynamic('tr143',0);
					param CoS uint notify(0,2) readwrite dynamic('tr143',0);
					param CoSToEXP string notify(0,2) readwrite dynamic('tr143',"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,2) readwrite dynamic('tr143',"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param InterfaceNetmask string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param UploadURL string notify(0,2) readwrite dynamic('tr143',"");
					param TestFileLength uint notify(0,2) readwrite dynamic('tr143',10);
					param ROMTime datetime notify(0,2) readonly dynamic('tr143',0);
					param BOMTime datetime notify(0,2) readonly dynamic('tr143',0);
					param EOMTime datetime notify(0,2) readonly dynamic('tr143',0);
					param TotalBytesSent uint notify(0,2) readonly dynamic('tr143',0);
				};
			};
			collection UDPEcho  dynamic('tr143', ''){
				default{
					param DiagnosticsState string notify(0,2) readwrite dynamic('tr143',"None");
					param SmartEdgeAddress string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param MPLSTag uint notify(0,2) readwrite dynamic('tr143',0);
					param CoS uint notify(0,2) readwrite dynamic('tr143',0);
					param CoSToEXP string notify(0,2) readwrite dynamic('tr143',"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,2) readwrite dynamic('tr143',"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param InterfaceNetmask string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param ServerAddress string notify(0,2) readwrite dynamic('tr143',"0.0.0.0");
					param ServerPort uint notify(0,2) readwrite dynamic('tr143',0);
					param PacketCount uint notify(0,2) readwrite dynamic('tr143',0);

					param PacketSize uint notify(0,2) readwrite dynamic('tr143',20);
					param PacketInterval uint notify(0,2) readwrite dynamic('tr143',1000);
					param StragglerTimeout uint notify(0,2) readwrite dynamic('tr143',5000);

					param BytesSent uint notify(0,2) readonly dynamic('tr143',0);
					param BytesReceived uint notify(0,2) readonly dynamic('tr143',0);
					param PacketsSent uint notify(0,2) readonly dynamic('tr143',0);
					param PacketsReceived uint notify(0,2) readonly dynamic('tr143',0);

					param PacketsLossPercentage string notify(0,2) readonly dynamic('tr143',0);
					param RTTAverage string notify(0,2) readonly dynamic('tr143',0);
					param RTTMax string notify(0,2) readonly dynamic('tr143',0);
					param RTTMin string notify(0,2) readonly dynamic('tr143',0);
					param SendPathPacketDelayDeltaAverage string notify(0,2) readonly dynamic('tr143',0);
					param SendPathPacketDelayDeltaMin string notify(0,2) readonly dynamic('tr143',0);
					param SendPathPacketDelayDeltaMax string notify(0,2) readonly dynamic('tr143',0);
					param ReceivePathPacketDelayDeltaAverage string notify(0,2) readonly dynamic('tr143',0);
					param ReceivePathPacketDelayDeltaMin string notify(0,2) readonly dynamic('tr143',0);
					param ReceivePathPacketDelayDeltaMax string notify(0,2) readonly dynamic('tr143',0);

				};
			};
		};
	};
};
