object InternetGatewayDevice {
	collection WANDevice const("") {
		object 1 {  ## This instance number is fixed for Wireless Modem
			param WANConnectionNumberOfEntries uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "0");  // Should be dynamic to register clean up handler in init handler

			object WANCommonInterfaceConfig {
				param EnabledForInternet bool notify(0,0,2) readonly const("1");
				param WANAccessType string notify(0,0,2) readonly const("WirelessModem");
//				param Layer1UpstreamMaxBitRate uint notify(0,0,2) readonly rdb("wwan.0.module.speed.max_up", 0, null, null, null, "5760000");
//				param Layer1DownstreamMaxBitRate uint notify(0,0,2) readonly rdb("wwan.0.module.speed.max_down", 0, null, null, null, "42000000");
				param WANAccessProvider string notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "Unknown");
				param PhysicalLinkStatus string notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "Unavailable");
				param TotalBytesSent uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "0");
				param TotalBytesReceived uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "0");
				param TotalPacketsSent uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "0");
				param TotalPacketsReceived uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "0");
				param MaximumActiveConnections uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "0");
				param NumberOfActiveConnections uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "0");

				collection Connection dynamic('wanDevice_wwan_multiplePDP', "") {
					default {
						param ActiveConnectionDeviceContainer string notify(0,0,1) readonly dynamic('wanDevice_wwan_multiplePDP', "");
						param ActiveConnectionServiceID string notify(0,0,1) readonly dynamic('wanDevice_wwan_multiplePDP', "");
					};
				};
				
			};
			object WANConnectionDevice {
				param WANIPConnectionNumberOfEntries uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "");
				param WANPPPConnectionNumberOfEntries uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "");
				object 1 {
					collection WANIPConnection dynamic('wanDevice_wwan_multiplePDP', "") {
						default {
							param Enable bool notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "1");
							param ConnectionStatus string notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "");
							param PossibleConnectionTypes string notify(0,0,2) readonly const("IP_Routed");
							param ConnectionType string notify(0,0,2) readonly const("IP_Routed");  ## "IP_Routed" only
							param Name string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");
							param Uptime uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "0");
							param LastConnectionError string notify(0,0,2) readonly const("ERROR_NONE");
// Bovine doesn't support							param AutoDisconnectTime uint notify(0,0,2) readwrite const("0");
// Bovine doesn't support							param IdleDisconnectTime uint notify(0,0,2) readwrite const("0");
// Bovine doesn't support							param WarnDisconnectDelay uint notify(0,0,2) readwrite const("0");
							param RSIPAvailable bool notify(0,0,2) readonly const("0");
							param NATEnabled bool notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "0");
							param AddressingType string notify(0,0,2) readonly const('DHCP');  ## "DHCP" only

							param ExternalIPAddress string notify(2,0,3) readonly dynamic('wanDevice_wwan_multiplePDP', "");  ## does not support write attribute
							param SubnetMask string notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "");  ## does not support write attribute
							param DefaultGateway string notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "");

//							param DNSEnabled bool notify(0,0,2) readwrite dynamic('wanDevice', "");
//							param DNSOverrideAllowed bool notify(0,0,2) readwrite dynamic('wanDevice', "");
//							param DNSServers string notify(0,0,2) readwrite dynamic('wanDevice', "");
							param DNSEnabled bool notify(0,0,2) readonly const("1");
							param DNSOverrideAllowed bool notify(0,0,2) readonly const("0");
							param DNSServers string notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "");

							param MaxMTUSize uint notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");
							param MACAddress string notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', ""); ## does not support write attribute
							param MACAddressOverride bool notify(0,0,2) readonly const("0");
// Bovine doesn't support							param ConnectionTrigger string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");
							param RouteProtocolRx string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', ""); ## Parameter value can be modified only for profile set to default route. Default Value: Off, Available Value: Off|RIPv1|RIPv2,
//							param PortMappingNumberOfEntries uint notify(0,0,2) readonly dynamic('wanDevice_wwan_multiplePDP', "");

							object X_NETCOMM_APNProfile {
								param ProfileName string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");
								param APN string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");
								param AuthenticationType string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");  ## Default Value: CHAP, Available Value: CHAP|PAP
								param UserName string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");
								param Password string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");
								param ReconnectDelay uint notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");  ## Default Value: 30, Available Value: 30~65535 (unit: seconds)
								param ReconnectRetries uint notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");  ## Default Value: 0, Available Value: 0~65535, 0=Unlimited 
								param InterfaceMetric uint notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");  ## Default Value: 20, Available Value: 0~65535
								param AutoAPN bool notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "1");
								param RoutingSettings string notify(0,0,2) readwrite dynamic('wanDevice_wwan_multiplePDP', "");  ## Available Value: Network_address/Network_mask (Only Dot-decimal notation is allowed), To clear routing setting, set value of the parameter as /
							};
						};

						param X_NETCOMM_PortMappingNumberOfEntries uint notify(0,0,2) readonly dynamic('wanDevice', "");
						collection X_NETCOMM_PortMapping dynamic('wanDevice', "") {
							default {
								param PortMappingEnabled bool notify(0,0,2) readwrite dynamic('wanDevice', "0");
								param PortMappingLeaseDuration uint notify(0,0,2) readwrite dynamic('wanDevice', "0");
								param RemoteHost string notify(0,0,2) readwrite dynamic('wanDevice', "");
								param ExternalPort uint notify(0,0,2) readwrite dynamic('wanDevice', "10000");
								param ExternalPortEndRange uint notify(0,0,2) readwrite dynamic('wanDevice', "0");
								param InternalPort uint notify(0,0,2) readwrite dynamic('wanDevice', "10000");
								param PortMappingProtocol string notify(0,0,2) readwrite dynamic('wanDevice', "tcp");
								param InternalClient string notify(0,0,2) readwrite dynamic('wanDevice', "");
								param PortMappingDescription string notify(0,0,2) readwrite dynamic('wanDevice', "");
							};
						};
					};
				};
			};
		};
	};

	object X_NETCOMM {
		object WWANProfile {
			collection APNLists dynamic('v_multiple_pdpsessions_y', "0") {
				default {
					param Enable bool notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param APNStatus string notify(0,0,2) readonly dynamic('v_multiple_pdpsessions_y', "");
					param AutoAPN bool notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "0");
					param ProfileName string notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param DialNum string notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param APN string notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param AuthenticationType string notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param UserName string notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param Password string notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param ReconnectDelay uint notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param ReconnectRetries uint notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param InterfaceMetric uint notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param NATMasquerading bool notify(0,0,2) readonly dynamic('v_multiple_pdpsessions_y', "");
					param DefaultRoute bool notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");
					param RoutingSetting string notify(0,0,2) readwrite dynamic('v_multiple_pdpsessions_y', "");  # Network_address/Network_mask
				};
			};
		};
	};
};


// END OF FILE: Do Not delete this line