//object InternetGatewayDevice {
//	collection LANDevice const("") {
//		object 1 {
//			param LANWLANConfigurationNumberOfEntries uint notify(0,0,2) readonly const("1");
//
//			object X_NETCOMM_WLANConfiguration {
//				object 1 {
//					param RadioEnabled bool notify(0,0,2) readwrite rdb("wlan.0.radio", 1, null, null, null, 1);
//					param Country string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "AU");  ## Available values are listed in CountryList parameter
//					param CountryList string notify(0,0,2) readonly dynamic('v_wifi_rt3070', "");  ## ";" separated list formatted [value of Country parameter]="Country name";
//					param NetworkMode string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");  ## Available value: [b-g | b-only | g-only | n-only | b-g-n]
//					param Channel uint notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "0"); ## Available channel is listed in PossibleChannels parameter. [0: Auto mode, 1~ ]
//					param CurrentChannel uint notify(0,0,2) readonly dynamic('v_wifi_rt3070', "");  ## 0 means "Searching Channel"
//					param PossibleChannels string notify(0,0,2) readonly dynamic('v_wifi_rt3070', "");   ## This parameter presents available channel list.
//
//					object AdvancedSetting {
//						param BGProtectionMode string notify(0,0,2) readwrite rdb("wlan.0.bg_protection", 1, 0, 2, null, 0);  ## [0(Auto)|1(On)|2(Off)]
//						param ClientIdleTimeout uint notify(0,0,2) readwrite rdb("wlan.0.idletimeout", 1, 60, 600, null, 300);  ## [sec (range 60 - 600, default 300)]
//						param BeaconInterval uint notify(0,0,2) readwrite rdb("wlan.0.conf.beacon_interval", 1, 20, 999, null, 100);  ## [ms (range 20 - 999, default 100)]
//						param DataBeaconRate uint notify(0,0,2) readwrite rdb("wlan.0.conf.dtim_interval", 1, 1, 255, null, 1);  ## [ms (range 1 - 255, default 1)]
//						param FragmentThreshold uint notify(0,0,2) readwrite rdb("wlan.0.conf.fragmentation_threshold", 1, 256, 2346, null, 2346);  ## [(range 256 - 2346, default 2346)]
//						param RTSThreshold uint notify(0,0,2) readwrite rdb("wlan.0.conf.rts_threshold", 1, 1, 2347, null, 2347);  ## [(range 1 - 2347, default 2347)]
//						param TXPower uint notify(0,0,2) readwrite rdb("wlan.0.conf.transmit_power", 1, 1, 100, null, 100);  ## [(range 1 - 100, default 100)]
//						param ShortPreamble bool notify(0,0,2) readwrite rdb("wlan.0.conf.preamble_type", 1, null, null, null, 0);  ## (default 0)
//					};
//
//					object WDS {
//						param WDSMode string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");  ## [disable|bridge|repeater]
//						param SourceMACaddress string notify(0,0,2) readonly dynamic('v_wifi_rt3070', "");
//						param EncryptKey string notify(0,0,2) writeonly dynamic('v_wifi_rt3070', "");
//						param AP_MACAddressList string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");  ## ";" seperated list. the maximun num of elements of the list is 4
//					};
//
//					param SSIDConfigurationNumberOfEntries uint notify(0,0,2) readonly dynamic('v_wifi_rt3070', "");
//					
//					collection SSIDConfiguration dynamic('v_wifi_rt3070', "") {
//						default {
//							param Enable bool notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");
//							param BSSID string notify(0,0,2) readonly dynamic('v_wifi_rt3070', "");
//							param SSID string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");
//							param BroadcastSSID bool notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");
//							param NetworkAuth string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");  ## [OPEN | SHARED | WPA | WPAPSK | WPA2 | WPA2PSK | WPAPSKWPA2PSK | WPA1WPA2]
//							param EncryptionMode string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', ""); ## [NONE|WEP|TKIP|AES]
//
//							param WEPEncryptionLevel string notify(0,0,2) readonly dynamic('v_wifi_rt3070', "");  ## [64-bit | 104-bit]
//							param WEPKeyIndex uint notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");  ## [1-4]
//							param WEPKey1 string notify(0,0,2) writeonly dynamic('v_wifi_rt3070', "");  ## [10 or 26 hexadecimal digits]
//							param WEPKey2 string notify(0,0,2) writeonly dynamic('v_wifi_rt3070', "");  ## [10 or 26 hexadecimal digits]
//							param WEPKey3 string notify(0,0,2) writeonly dynamic('v_wifi_rt3070', "");  ## [10 or 26 hexadecimal digits]
//							param WEPKey4 string notify(0,0,2) writeonly dynamic('v_wifi_rt3070', "");  ## [10 or 26 hexadecimal digits]
//
//							param WPAGroupRekeyinterval uint notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");
//							param RADIUSServerIPAddress string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");
//							param RADIUSPort uint notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");
//							param RADIUSKey string notify(0,0,2) writeonly dynamic('v_wifi_rt3070', "");
//
//							param WPAPreSharedKey string notify(0,0,2) writeonly dynamic('v_wifi_rt3070', "");  ## WPA Pre-Shared Key should be between 8 and 63 ASCII characters or 64 hexadecimal digits.
//
//							object MACFiltering {
//								param FilteringPolicy string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");  ## [Disable|Allow|Block]
//								param MACaddressList  string notify(0,0,2) readwrite dynamic('v_wifi_rt3070', "");  ## [";" seperated list]
//							};
//						};
//					};
//				};
//			};
//		};
//	};
//};


// END OF FILE: Do Not delete this line
