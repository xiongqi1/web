object InternetGatewayDevice {
	param DeviceSummary string notify(0,0,3) readonly const("InternetGatewayDevice:1.1[](Baseline:1)");

	object DeviceInfo {
		param Manufacturer string notify(0,0,2) readonly const("NetComm Limited");
		param ManufacturerOUI string notify(0,0,2) readonly const("001D85");
		param ModelName string notify(0,0,2) readonly rdb("system.product.model", 1, 0, 64, null, "NBN-WNTD");
		param Description string notify(0,0,2) readonly rdb("system.product.title", 1, 0, 256, null, "NetComm Cellular Router");
		param ProductClass string notify(0,0,2) readonly rdb("system.product.class", 1, 0, 64, null, "NBN-WNTD");
		param SerialNumber string notify(0,0,2) readonly rdb("systeminfo.serialnumber", 1, 0, 64, null, "");
		param HardwareVersion string notify(0,0,3) readonly rdb("version.hardware", 1, 0, 64, null, "N/A");
		param SoftwareVersion string notify(2,2,3) readonly rdb("version.software", 1, 0, 64, null, "N/A");
		param AdditionalHardwareVersion string notify(0,0,2) readonly rdb("indoor.product_id", 0, 0, 64, null, "N/A");
		param AdditionalSoftwareVersion string notify(0,0,2) readonly rdb("indoor.firmware_version", 0, 0, 64, null, "N/A");
		param ModemFirmwareVersion string notify(0,0,2) readonly rdb("wwan.0.firmware_version", 0, 0, 64, null, "N/A");
		param SpecVersion string notify(0,0,3) readonly const("1.0");
		param ProvisioningCode string notify(2,2,3) readwrite rdb("tr069.state.provisioning_code", 1, 0, 64, null, "");
		param UpTime uint notify(0,0,1) readonly dynamic('time', 0); # NTP time handler also supports UpTime
		param DeviceLog string notify(0,0,1) readonly dynamic('management', "");
	};

	object ManagementServer {
		param URL string notify(0,0,2) readwrite rdb("tr069.server.url", 1, 1, 256, 'URL', "https://rdm.nwas.nbnco.net.au:10036/tr069devicemanagement/tr069webservice");
#		param URL string notify(0,0,2) readwrite rdb("tr069.server.url", 1, 1, 256, 'URL', "http://rdm.nwas.nbnco.net.au:38080/tr069devicemanagement/tr069webservice");
#		param URL string notify(0,0,2) readwrite rdb("tr069.server.url", 1, 1, 256, 'URL', "http://rdm.nwas.nbn.net.au/");
#		param URL string notify(0,0,2) readwrite rdb("tr069.server.url", 1, 1, 256, 'URL', "http://192.168.0.41/acs/cwmp.php");
#		param URL string notify(0,0,2) readwrite rdb("tr069.server.url", 1, 1, 256, 'URL', "http://10.100.1.1/acs/cwmp.php");
#		param URL string notify(0,0,2) readwrite rdb("tr069.server.url", 1, 1, 256, 'URL', "http://192.121.199.178:38080/tr069devicemanagement/tr069webservice");
		param Username string notify(0,0,2) readwrite rdb("tr069.server.username", 1, 0, 256, null, "admin");
		param Password string notify(0,0,2) writeonly rdb("tr069.server.password", 1, 0, 256, null, "admin");
		param CWMPRetryMinimumWaitInterval uint notify(0,0,2) readwrite rdb("tr069.server.retry.minimum", 1, 5, null, null, 5);
		param CWMPRetryIntervalMultiplier uint notify(0,0,2) readwrite rdb("tr069.server.retry.multiplier", 1, 0, null, null, 2000);
		param PeriodicInformEnable bool notify(0,0,2) readwrite rdb("tr069.server.periodic.enable", 1, null, null, null, 1);
		param PeriodicInformInterval uint notify(0,0,2) readwrite rdb("tr069.server.periodic.interval", 1, 1, null, null, 60);
		param PeriodicInformTime datetime notify(0,0,2) readwrite rdb("tr069.server.periodic.time", 1, null, null, null, 0);
		param ParameterKey string notify(0,0,3) readwrite rdb("tr069.server.paramkey", 1, 0, 32, null, "");
		param ConnectionRequestURL string notify(2,0,3) readonly dynamic('management', "");
#		param ConnectionRequestURL string notify(2,0,3) readonly const("http://10.100.1.50:8082/acscall");
#		param ConnectionRequestURL string notify(2,0,3) readonly const("http://220.233.131.78:10101/acscall");
		param ConnectionRequestUsername string notify(0,0,2) readwrite rdb("tr069.request.username", 1, 0, 256, null, "dps");
		param ConnectionRequestPassword string notify(0,0,2) writeonly rdb("tr069.request.password", 1, 0, 256, null, "dps");
		param UpgradesManaged bool notify(0,0,2) readwrite rdb("tr069.server.upgrades_managed", 1, null, null, null, 0);
	};

	object LANConfigSecurity {
		param ConfigPassword string notify(0,0,2) writeonly rdb("admin.user.admin", 1, 0, 64, null, "");
	};

	# Time:2 Profile
	object Time {
		param Enable bool notify(0,0,2) readwrite rdb("service.ntp.enable", 1, null, null, null, 0);
		param NTPServer1 string notify(0,0,2) readwrite rdb("service.ntp.server_1", 1, 0, 64, null, "au.pool.ntp.org");
		param NTPServer2 string notify(0,0,2) readwrite rdb("service.ntp.server_2", 1, 0, 64, null, "pool.ntp.org");
		param NTPServer3 string notify(0,0,2) readwrite rdb("service.ntp.server_3", 1, 0, 64, null, "");
		param NTPServer4 string notify(0,0,2) readwrite rdb("service.ntp.server_4", 1, 0, 64, null, "");
		param NTPServer5 string notify(0,0,2) readwrite rdb("service.ntp.server_5", 1, 0, 64, null, "");
		param CurrentLocalTime datetime notify(0,0,1) readonly dynamic('time', 0);
		param LocalTimeZone string notify(0,0,2) readonly dynamic('time', "+00:00");
		param LocalTimeZoneName string notify(0,0,2) readonly dynamic('time', "UTC");
		param NTPServerOption1 string notify(0,0,2) readwrite rdb("service.ntp.option_1", 1, 0, 256, null, "burst iburst prefer true minpoll 9");
		param NTPServerOption2 string notify(0,0,2) readwrite rdb("service.ntp.option_2", 1, 0, 256, null, "");
		param NTPServerOption3 string notify(0,0,2) readwrite rdb("service.ntp.option_3", 1, 0, 256, null, "");
		param NTPServerOption4 string notify(0,0,2) readwrite rdb("service.ntp.option_4", 1, 0, 256, null, "");
		param NTPServerOption5 string notify(0,0,2) readwrite rdb("service.ntp.option_5", 1, 0, 256, null, "");

	};

	object X_NETCOMM {
		object Alarms {
			param Timestamp datetime notify(2,0,2) readonly rdb("alarmd.timestamp", 0, 0, null, null, 0);
			param ActiveIDs	 string  notify(2,0,2) readonly rdb("alarms._index", 0, null, null, null, "");
			param MaximumAlarms uint notify(0,0,2) readwrite rdb("alarmd.max_alarms", 0, 0, 1000, null, 20);
			param Acknowledge string notify(0,0,2) readwrite rdb("alarms.acknowledge", 0, null, null, null, "");

			collection Alarm rdbobj('alarms', 0, null, 1) {
				default {
					param Raised  datetime notify(0,0,2) readonly rdbmem('raised', 0, null, null, 0);
					param Cleared datetime notify(2,0,2) readonly rdbmem('cleared', 0, null, null, 0);
					param Subsystem string notify(0,0,2) readonly rdbmem('subsys', 0, 64, null, "");
					param Description string notify(0,0,2) readonly rdbmem('message', 0, 255, null, "");
				};
			};
		};
		object PSU {
			param OnBattery bool notify(2,0,2) readonly rdb("psu.on_battery", 0, null, null, null, 0);
			param LowBattery bool notify(2,0,2) readonly rdb("psu.low_battery", 0, null, null, null, 0);
			param ReplaceBattery bool notify(1,0,2) readonly rdb("psu.replace_battery", 0, null, null, null, 0);
			param MissingBattery bool notify(1,0,2) readonly rdb("psu.missing_battery", 0, null, null, null, 0);
		};
		object DebugInterface {
			param Enable bool notify(0,0,2) readwrite rdb("link.profile.0.enable", 0, null, null, null, 0);
			param IPAddress string notify(0,0,2) readwrite rdb("link.profile.0.address", 1, 0, 15, 'IPv4', '192.168.0.60');
			param Netmask string notify(0,0,2) readwrite rdb("link.profile.0.netmask", 1, 0, 15, 'IPv4Mask', '255.255.255.0');
			param DefaultGateway string notify(0,0,2) readwrite rdb("link.profile.0.defaultgw", 1, 0, 15, 'IPv4', '192.168.0.41');
		};
		object Radio {
			param PCILockingEARFCNs string notify(0,0,2) readwrite rdb("wwan.0.pcil_earfcn", 1, 0, null, null, "");
			param RFQualificationEARFCNs string notify(0,0,2) readwrite rdb("wwan.0.rfq_earfcn", 1, 0, null, null, "");
			param TargetCellID string notify(0,0,2) readwrite rdb("wwan.0.pci", 1, 0, 64, null, "");
			param RecoveryTimer uint notify(0,0,2) readwrite rdb("wwan.0.recovery_timer", 1, 0, null, null, 900);
			param ControlAPN string notify(0,0,2) readwrite rdb("link.profile.1.apn", 1, 0, 64, null, "rdm");
			param DataAPN string notify(0,0,2) readwrite rdb("link.profile.2.apn", 1, 0, 64, null, "access-seeker");
#			object Identity {
#				param MAC string notify(0,1) readonly rdb("wwan.0.mac", 0, null, null, null, 0);
#				param IMEI string notify(0,1) readonly rdb("wwan.0.imei", 0, null, null, null, 0);
#				param FirmwareVersion string notify(0,1) readonly rdb("wwan.0.firmware_version", 0, null, null, null, 0);
#			};
			object Signal {
				param RSRQ string notify(0,0,1) readonly rdb("wwan.0.signal.rsrq", 0, null, null, null, 0);
				param RSSI string notify(0,0,1) readonly rdb("wwan.0.rssi", 0, null, null, null, 0);
				param CINR string notify(0,0,1) readonly rdb("wwan.0.cinr", 0, null, null, null, 0);

				param CINR0 string notify(0,0,1) readonly rdb("wwan.0.signal.0.cinr", 0, null, null, null, 0);
				param RSRP0 string notify(0,0,1) readonly rdb("wwan.0.signal.0.rsrp", 0, null, null, null, 0);
				param NoisePower0 string notify(0,0,1) readonly rdb("wwan.0.signal.0.noise_power", 0, null, null, null, 0);
				param RXGain0 string notify(0,0,1) readonly rdb("wwan.0.signal.0.rx_gain", 0, null, null, null, 0);
				param RXPSD0 string notify(0,0,1) readonly rdb("wwan.0.signal.0.rx_psd", 0, null, null, null, 0);
				param RXPSDBO0 string notify(0,0,1) readonly rdb("wwan.0.signal.0.rx_psd_bo", 0, null, null, null, 0);
				param DigitalGain0 string notify(0,0,1) readonly rdb("wwan.0.signal.0.digital_gain", 0, null, null, null, 0);

				param CINR1 string notify(0,0,1) readonly rdb("wwan.0.signal.1.cinr", 0, null, null, null, 0);
				param RSRP1 string notify(0,0,1) readonly rdb("wwan.0.signal.1.rsrp", 0, null, null, null, 0);
				param NoisePower1 string notify(0,0,1) readonly rdb("wwan.0.signal.1.noise_power", 0, null, null, null, 0);
				param RXGain1 string notify(0,0,1) readonly rdb("wwan.0.signal.1.rx_gain", 0, null, null, null, 0);
				param RXPSD1 string notify(0,0,1) readonly rdb("wwan.0.signal.1.rx_psd", 0, null, null, null, 0);
				param RXPSDBO1 string notify(0,0,1) readonly rdb("wwan.0.signal.1.rx_psd_bo", 0, null, null, null, 0);
				param DigitalGain1 string notify(0,0,1) readonly rdb("wwan.0.signal.1.digital_gain", 0, null, null, null, 0);
				param TxPower string notify(0,0,2) readonly rdb('wwan.0.signal.tx_power_PUSCH', 0, null, null, null, '');

			};
			object Stats {
				object BlockErrorRate {
					param InitialCodeword0 uint notify(0,0,1) readonly rdb("wwan.0.bler.initial_cw0", 0, null, null, null, 0);
					param InitialCodeword1 uint notify(0,0,1) readonly rdb("wwan.0.bler.initial_cw1", 0, null, null, null, 0);
					param ResidualCodeword0 uint notify(0,0,1) readonly rdb("wwan.0.bler.residual_cw0", 0, null, null, null, 0);
					param ResidualCodeword1 uint notify(0,0,1) readonly rdb("wwan.0.bler.residual_cw1", 0, null, null, null, 0);
				};
				object HARQ {
					param DownlinkACKCodeword0 uint notify(0,0,1) readonly rdb("wwan.0.harq.dl_ack_cw0", 0, null, null, null, 0);
					param DownlinkNACKCodeword0 uint notify(0,0,1) readonly rdb("wwan.0.harq.dl_nack_cw0", 0, null, null, null, 0);
					param DownlinkACKCodeword1 uint notify(0,0,1) readonly rdb("wwan.0.harq.dl_ack_cw1", 0, null, null, null, 0);
					param DownlinkNACKCodeword1 uint notify(0,0,1) readonly rdb("wwan.0.harq.dl_nack_cw1", 0, null, null, null, 0);
					param UplinkACK uint notify(0,0,1) readonly rdb("wwan.0.harq.ul_ack", 0, null, null, null, 0);
					param UplinkNACK uint notify(0,0,1) readonly rdb("wwan.0.harq.ul_nack", 0, null, null, null, 0);
					param TX1stOK uint notify(0,0,1) readonly rdb("wwan.0.harq.1st_tx_ok", 0, null, null, null, 0);
					param ReTX1stOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_1st", 0, null, null, null, 0);
					param ReTX2ndOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_2nd", 0, null, null, null, 0);
					param ReTX3rdOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_3rd", 0, null, null, null, 0);
					param ReTX4thOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_4th", 0, null, null, null, 0);
					param ReTX5thOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_5th", 0, null, null, null, 0);
					param ReTX6thOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_6th", 0, null, null, null, 0);
					param ReTX7thOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_7th", 0, null, null, null, 0);
					param ReTX8thOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_8th", 0, null, null, null, 0);
					param ReTX9thOK uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_9th", 0, null, null, null, 0);
					param ReTXMaximum uint notify(0,0,1) readonly rdb("wwan.0.harq.retx_max", 0, null, null, null, 0);
				};
			};
		};
		object SystemMonitor {
			param Enable bool notify(0,0,2) readwrite dynamic('systemmonitor', 0);
			param PingHost1 string notify(0,0,2) readwrite dynamic('systemmonitor', "");
			param PingHost2 string notify(0,0,2) readwrite dynamic('systemmonitor', "");
			param PingInterval uint notify(0,0,2) readwrite dynamic('systemmonitor', 300);
			param PingErrorInterval uint notify(0,0,2) readwrite dynamic('systemmonitor', 10);
			param PingErrorsToReset uint notify(0,0,2) readwrite dynamic('systemmonitor', 5);
			param ForceReboot uint notify(0,0,2) readwrite dynamic('systemmonitor', 0);
                        param MaxSuppressedResets uint notify(0,0,2) readwrite rdb("service.systemmonitor.pingmon_dccdwait_max", 1, 0, 999999, null, 10);
		};
		object Networking {
#			param MaxFrameSize uint notify(0,0,2) readwrite rdb("unid.max_frame_size", 1, 590, 2048, null, 1522);
			param MaxFrameSize uint notify(0,0,2) readwrite dynamic('unid', 1522);
			param TCPReceiveWindowSize string notify(0,0,2) readwrite rdb("tcp.rmem", 1, 0, 64, null, "4096 873780 2097152");
			param TCPTransmitWindowSize string notify(0,0,2) readwrite rdb("tcp.wmem", 1, 0, 64, null, "4096 65536 2097152");
			param PollUNIDMACs bool notify(0,0,2) readwrite rdb("service.mplsd.want_macs", 1, null, null, null, 1);
			param AirInterfaceIPFilter string notify(0,0,2) readwrite rdb("wwan.0.ipfilter", 1, 0, 512, null, "");
		};
		collection UNID dynamic('unid', "") {
			default {
				param Enable bool notify(0,0,2) readwrite dynamic('unid', 0);
				param Status string notify(0,0,2) readonly dynamic('unid', "Disabled");
				param MaxBitRate string notify(0,0,2) readwrite dynamic('unid', "Auto");
				param DuplexMode string notify(0,0,2) readwrite dynamic('unid', "Auto");
				param TaggingMode string notify(0,0,2) readwrite dynamic('unid', "DefaultMapped");
				param MACs string notify(0,0,2) readwrite dynamic('unid', "");
				object Stats {
					param BytesSent uint notify(0,0,1) readonly dynamic('unid', 0);
					param BytesReceived uint notify(0,0,1) readonly dynamic('unid', 0);
					param FramesSent uint notify(0,0,1) readonly dynamic('unid', 0);
					param FramesReceived uint notify(0,0,1) readonly dynamic('unid', 0);
					param DiscardsRX uint notify(0,0,1) readonly dynamic('unid', 0);
					param ErrorsTX uint notify(0,0,1) readonly dynamic('unid', 0);
					param ErrorsRX uint notify(0,0,1) readonly dynamic('unid', 0);
					param RateTXAverage uint notify(0,0,1) readonly dynamic('unid', 0);
					param RateRXAverage uint notify(0,0,1) readonly dynamic('unid', 0);
					param RateTXMinimum uint notify(0,0,1) readonly dynamic('unid', 0);
					param RateRXMinimum uint notify(0,0,1) readonly dynamic('unid', 0);
					param RateTXMaximum uint notify(0,0,1) readonly dynamic('unid', 0);
					param RateRXMaximum uint notify(0,0,1) readonly dynamic('unid', 0);
					param Epoch datetime notify(0,0,1) readonly dynamic('unid', 0);
					param Timestamp datetime notify(0,0,1) readonly dynamic('unid', 0);
				};
			};
		};
		collection AVC dynamic('avc', '') {
			default {
				param Enable bool notify(0,0,2) readwrite dynamic('avc', 0);
				param Status string notify(0,0,2) readonly dynamic('avc', "Disabled");
				param ID string notify(0,0,2) readwrite dynamic('avc', "AVC000000000000");
				param SmartEdgeAddress string notify(0,0,2) readwrite dynamic('avc', "0.0.0.0");
				param MPLSTag uint notify(0,0,2) readwrite dynamic('avc', 0);
				param UNID uint notify(0,0,2) readwrite dynamic('avc', 0);
				param VID int notify(0,0,2) readwrite dynamic('avc', 0);
				param CoS uint notify(0,0,2) readwrite dynamic('avc', 0);
#				param TC1_CIR uint notify(0,0,2) readwrite dynamic('avc', 150000);
#				param TC4_PIR uint notify(0,0,2) readwrite dynamic('avc', 1000000);
#				param DefaultTXCoS uint notify(0,0,2) readwrite dynamic('avc', 0);
#				param DefaultRXCoS uint notify(0,0,2) readwrite dynamic('avc', 0);
				param PCPToCoS string notify(0,0,2) readwrite dynamic('avc', "0,1,2,3,4,5,6,7");
				param DSCPToCoS string notify(0,0,2) readwrite dynamic('avc', "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");
				param CoSToEXP string notify(0,0,2) readwrite dynamic('avc', "0,1,2,3,4,5,6,7");
				param CoSToDSCP string notify(0,0,2) readwrite dynamic('avc', "0,0,0,16,32,40,0,0");
				param EXPToCoS string notify(0,0,2) readwrite dynamic('avc', "0,1,2,3,4,5,6,7");
				param CoSToPCP string notify(0,0,2) readwrite dynamic('avc', "0,1,2,3,4,5,6,7");

				object TC1 {
					param CIR uint notify(0,0,2) readwrite dynamic('avc', 150000);
				};
				object TC2 {
					param CIR uint notify(0,0,2) readwrite dynamic('avc', 150000);
				};
				object TC3 {
					param CIR uint notify(0,0,2) readwrite dynamic('avc', 150000);
					param PIR uint notify(0,0,2) readwrite dynamic('avc', 1000000);
				};
				object TC4 {
					param PIR uint notify(0,0,2) readwrite dynamic('avc', 1000000);
				};
				object Stats {
					param BytesSent uint notify(0,0,1) readonly dynamic('avc', 0);
					param BytesReceived uint notify(0,0,1) readonly dynamic('avc', 0);
					param FramesSent uint notify(0,0,1) readonly dynamic('avc', 0);
					param FramesReceived uint notify(0,0,1) readonly dynamic('avc', 0);
					param Timestamp datetime notify(0,0,1) readonly dynamic('avc', 0);
					param PoliceBytes uint notify(0,0,1) readonly dynamic('avc', 0);
					param PoliceFrames uint notify(0,0,1) readonly dynamic('avc', 0);
					param PoliceFramesDropped uint notify(0,0,1) readonly dynamic('avc', 0);
					param PoliceTimestamp datetime notify(0,0,1) readonly dynamic('avc', 0);
					param TrunkBytesReceived uint notify(0,0,1) readonly dynamic('avc', 0);
					param TrunkBytesSent uint notify(0,0,1) readonly dynamic('avc', 0);
					param TrunkFramesReceived uint notify(0,0,1) readonly dynamic('avc', 0);
					param TrunkFramesSent uint notify(0,0,1) readonly dynamic('avc', 0);
					param TrunkTimestamp datetime notify(0,0,1) readonly dynamic('avc', 0);
				};
			};
		};
		object Diagnostics {

			param HttpMovingAverageWindowSize uint notify(0,0,2) readwrite rdb("diagnostics.httpmovingaveragewindowsize", 1, null, null, null, 5);

			object Capabilities {
				param DownloadTransports string notify(0,0,2) readonly const("HTTP");
				param UploadTransports string notify(0,0,2) readonly const("HTTP");

			};
			object Session{
				param Maximum uint	notify(0,0,2) readonly const("2");
				param DownloadActiveIDs  string notify(0,0,2) readonly rdb("diagnostics.session.download_activeids", 0, 0, null, null, '');
				param UploadActiveIDs 	 string notify(0,0,2) readonly rdb("diagnostics.session.upload_activeids", 0, 0, null, null, '');
				param UDPEchoActiveIDs	 string notify(0,0,2) readonly rdb("diagnostics.session.udpecho_activeids", 0, 0, null, null, '');
			};
			collection Download  dynamic('tr143', '') {
				default{
					param SmartEdgeAddress string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param MPLSTag uint notify(0,0,2) readwrite dynamic('tr143',0);
					param CoS uint notify(0,0,2) readwrite dynamic('tr143',0);
					param CoSToEXP string notify(0,0,2) readwrite dynamic('tr143',"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,0,2) readwrite dynamic('tr143',"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param InterfaceNetmask string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param DownloadURL string notify(0,0,2) readwrite dynamic('tr143',"");
					param ROMTime datetime notify(0,0,2) readonly dynamic('tr143',0);
					param BOMTime datetime notify(0,0,2) readonly dynamic('tr143',0);
					param EOMTime datetime notify(0,0,2) readonly dynamic('tr143',0);
					param TestBytesReceived uint notify(0,0,2) readonly dynamic('tr143',0);
					param TotalBytesReceived uint notify(0,0,2) readonly dynamic('tr143',0);

					param MaxThroughput uint notify(0,0,2) readonly dynamic('tr143',0);
					param MinThroughput uint notify(0,0,2) readonly dynamic('tr143',0);
					object TC1 {
						param CIR uint notify(0,0,2) readwrite dynamic('tr143', 165000);
					};
					object TC4 {
						param PIR uint notify(0,0,2) readwrite dynamic('tr143', 2200000);
					};

					param DiagnosticsState string notify(0,0,2) readwrite dynamic('tr143', "None");

				};
			};
			collection Upload  dynamic('tr143', ''){
				default{
					param SmartEdgeAddress string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param MPLSTag uint notify(0,0,2) readwrite dynamic('tr143',0);
					param CoS uint notify(0,0,2) readwrite dynamic('tr143',0);
					param CoSToEXP string notify(0,0,2) readwrite dynamic('tr143',"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,0,2) readwrite dynamic('tr143',"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param InterfaceNetmask string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param UploadURL string notify(0,0,2) readwrite dynamic('tr143',"");
					param TestFileLength uint notify(0,0,2) readwrite dynamic('tr143',10);
					param ROMTime datetime notify(0,0,2) readonly dynamic('tr143',0);
					param BOMTime datetime notify(0,0,2) readonly dynamic('tr143',0);
					param EOMTime datetime notify(0,0,2) readonly dynamic('tr143',0);
					param TotalBytesSent uint notify(0,0,2) readonly dynamic('tr143',0);

					param MaxThroughput uint notify(0,0,2) readonly dynamic('tr143',0);
					param MinThroughput uint notify(0,0,2) readonly dynamic('tr143',0);
					object TC1 {
						param CIR uint notify(0,0,2) readwrite dynamic('tr143', 165000);
					};
					object TC4 {
						param PIR uint notify(0,0,2) readwrite dynamic('tr143', 5500000);
					};

					param DiagnosticsState string notify(0,0,2) readwrite dynamic('tr143',"None");
				};
			};
			collection UDPEcho  dynamic('tr143', ''){
				default{
					param SmartEdgeAddress string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param MPLSTag uint notify(0,0,2) readwrite dynamic('tr143',0);
					param CoS uint notify(0,0,2) readwrite dynamic('tr143',0);
					param CoSToEXP string notify(0,0,2) readwrite dynamic('tr143',"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,0,2) readwrite dynamic('tr143',"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param InterfaceNetmask string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param ServerAddress string notify(0,0,2) readwrite dynamic('tr143',"0.0.0.0");
					param ServerPort uint notify(0,0,2) readwrite dynamic('tr143',0);
					param PacketCount uint notify(0,0,2) readwrite dynamic('tr143',0);

					param PacketSize uint notify(0,0,2) readwrite dynamic('tr143',20);
					param PacketInterval uint notify(0,0,2) readwrite dynamic('tr143',1000);
					param StragglerTimeout uint notify(0,0,2) readwrite dynamic('tr143',5000);

					param BytesSent uint notify(0,0,2) readonly dynamic('tr143',0);
					param BytesReceived uint notify(0,0,2) readonly dynamic('tr143',0);
					param PacketsSent uint notify(0,0,2) readonly dynamic('tr143',0);
					param PacketsReceived uint notify(0,0,2) readonly dynamic('tr143',0);

					param PacketsSendLoss uint notify(0,0,2) readonly dynamic('tr143',0);
					param PacketsReceiveLoss uint notify(0,0,2) readonly dynamic('tr143',0);

					param PacketsLossPercentage string notify(0,0,2) readonly dynamic('tr143',0);
					param RTTAverage string notify(0,0,2) readonly dynamic('tr143',0);
					param RTTMax string notify(0,0,2) readonly dynamic('tr143',0);
					param RTTMin string notify(0,0,2) readonly dynamic('tr143',0);
					#param RTT string notify(0,0,2) readonly dynamic('tr143',0);
					#param SendPathDelayDelta string notify(0,0,2) readonly dynamic('tr143',0);
					#param ReceivePathDelayDelta string notify(0,0,2) readonly dynamic('tr143',0);

					object TC1 {
						param CIR uint notify(0,0,2) readwrite dynamic('tr143', 165000);
					};
					object TC4 {
						param PIR uint notify(0,0,2) readwrite dynamic('tr143', 2200000);
					};

					param SendPathDelayDeltaJitterAverage string notify(0,0,2) readonly dynamic('tr143',0);
					param SendPathDelayDeltaJitterMin string notify(0,0,2) readonly dynamic('tr143',0);
					param SendPathDelayDeltaJitterMax string notify(0,0,2) readonly dynamic('tr143',0);
					param ReceivePathDelayDeltaJitterAverage string notify(0,0,2) readonly dynamic('tr143',0);
					param ReceivePathDelayDeltaJitterMin string notify(0,0,2) readonly dynamic('tr143',0);
					param ReceivePathDelayDeltaJitterMax string notify(0,0,2) readonly dynamic('tr143',0);
					param DiagnosticsState string notify(0,0,2) readwrite dynamic('tr143',"None");
				};
			};
		};
		object InstallDiag{
			object Downlink {
				object Peak{
					#param Threshold uint notify(0,0,2) readwrite rdb("installdiag.download.4.threshold", 1, null, null, null, 500000);
					param SmartEdgeAddress string notify(0,0,2) readwrite rdb("installdiag.download.4.smartedgeaddress", 1, null, null, null, '0.0.0.0');
					param MPLSTag uint notify(0,0,2) readwrite rdb("installdiag.download.4.mplstag", 1, null, null, null,0);
					param CoS uint notify(0,0,2) readwrite rdb("installdiag.download.4.cos", 1, null, null, null, 0);
					param CoSToEXP string notify(0,0,2) readwrite rdb("installdiag.download.4.costoexp", 1, null, null, null,"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,0,2) readwrite rdb("installdiag.download.4.costodscp", 1, null, null, null,"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,0,2) readwrite rdb("installdiag.download.4.interfaceaddress", 1, null, null, null,"0.0.0.0");
					param InterfaceNetmask string notify(0,0,2) readwrite rdb("installdiag.download.4.interfacenetmask", 1, null, null, null,"0.0.0.0");
					param DownloadURL string notify(0,0,2) readwrite rdb("installdiag.download.4.downloadurl", 1, null, null, null,"");
					object TC1 {
						param CIR uint notify(0,0,2) readwrite rdb("installdiag.download.4.tc1_cir", 1, null, null, null, 165000);
					};
					object TC4 {
						param PIR uint notify(0,0,2) readwrite rdb("installdiag.download.4.tc4_pir", 1, null, null, null, 2200000);
					};
				};
				object Minimum{
					param Threshold uint notify(0,0,2) readwrite rdb("installdiag.download.1.threshold", 1, null, null, null, 500000);
					param SmartEdgeAddress string notify(0,0,2) readwrite rdb("installdiag.download.1.smartedgeaddress", 1, null, null, null, '0.0.0.0');
					param MPLSTag uint notify(0,0,2) readwrite rdb("installdiag.download.1.mplstag", 1, null, null, null, 0);
					param CoS uint notify(0,0,2) readwrite rdb("installdiag.download.1.cos", 1, null, null, null, 5);
					param CoSToEXP string notify(0,0,2) readwrite rdb("installdiag.download.1.costoexp", 1, null, null, null, "0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,0,2) readwrite rdb("installdiag.download.1.costodscp", 1, null, null, null, "0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,0,2) readwrite rdb("installdiag.download.1.interfaceaddress", 1, null, null, null, "0.0.0.0");
					param InterfaceNetmask string notify(0,0,2) readwrite rdb("installdiag.download.1.interfacenetmask", 1, null, null, null, "0.0.0.0");
					param DownloadURL string notify(0,0,2) readwrite rdb("installdiag.download.1.downloadurl", 1, null, null, null, "");
					object TC1 {
						param CIR uint notify(0,0,2) readwrite rdb("installdiag.download.1.tc1_cir", 1, null, null, null, 165000);
					};
					object TC4 {
						param PIR uint notify(0,0,2) readwrite rdb("installdiag.download.1.tc4_pir", 1, null, null, null, 2200000);
					};
				};
			};
			object Uplink{
				object Peak{
					#param Threshold uint notify(0,0,2) readwrite rdb("installdiag.download.4.threshold", 1, null, null, null, 150000);
					param SmartEdgeAddress string notify(0,0,2) readwrite rdb("installdiag.upload.4.smartedgeaddress", 1, null, null, null, '0.0.0.0');
					param MPLSTag uint notify(0,0,2) readwrite rdb("installdiag.upload.4.mplstag", 1, null, null, null,0);
					param CoS uint notify(0,0,2) readwrite rdb("installdiag.upload.4.cos", 1, null, null, null, 0);
					param CoSToEXP string notify(0,0,2) readwrite rdb("installdiag.upload.4.costoexp", 1, null, null, null,"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,0,2) readwrite rdb("installdiag.upload.4.costodscp", 1, null, null, null,"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,0,2) readwrite rdb("installdiag.upload.4.interfaceaddress", 1, null, null, null,"0.0.0.0");
					param InterfaceNetmask string notify(0,0,2) readwrite rdb("installdiag.upload.4.interfacenetmask", 1, null, null, null,"0.0.0.0");
					param UploadURL string notify(0,0,2) readwrite rdb("installdiag.upload.4.uploadurl", 1, null, null, null,"");
					param TestFileLength uint notify(0,0,2) readwrite rdb("installdiag.upload.4.testfilelength", 1, null, null, null,10);
					object TC1 {
						param CIR uint notify(0,0,2) readwrite rdb("installdiag.upload.4.tc1_cir", 1, null, null, null, 165000);
					};
					object TC4 {
						param PIR uint notify(0,0,2) readwrite rdb("installdiag.upload.4.tc4_pir", 1, null, null, null, 2200000);
					};
				};
				object Minimum{
					param Threshold uint notify(0,0,2) readwrite rdb("installdiag.upload.1.threshold", 1, null, null, null, 150000);
					param SmartEdgeAddress string notify(0,0,2) readwrite rdb("installdiag.upload.1.smartedgeaddress", 1, null, null, null,"0.0.0.0");
					param MPLSTag uint notify(0,0,2) readwrite rdb("installdiag.upload.1.mplstag", 1, null, null, null,0);
					param CoS uint notify(0,0,2) readwrite rdb("installdiag.upload.1.cos", 1, null, null, null, 5);
					param CoSToEXP string notify(0,0,2) readwrite rdb("installdiag.upload.1.costoexp", 1, null, null, null,"0,1,2,3,4,5,6,7");
					param CoSToDSCP string notify(0,0,2) readwrite rdb("installdiag.upload.1.costodscp", 1, null, null, null,"0,0,0,16,32,40,0,0");
					param InterfaceAddress string notify(0,0,2) readwrite rdb("installdiag.upload.1.interfaceaddress", 1, null, null, null,"0.0.0.0");
					param InterfaceNetmask string notify(0,0,2) readwrite rdb("installdiag.upload.1.interfacenetmask", 1, null, null, null,"0.0.0.0");
					param UploadURL string notify(0,0,2) readwrite rdb("installdiag.upload.1.uploadurl", 1, null, null, null,"");
					param TestFileLength uint notify(0,0,2) readwrite rdb("installdiag.upload.1.testfilelength", 1, null, null, null,10);
					object TC1 {
						param CIR uint notify(0,0,2) readwrite rdb("installdiag.upload.1.tc1_cir", 1, null, null, null, 165000);
					};
					object TC4 {
						param PIR uint notify(0,0,2) readwrite rdb("installdiag.upload.1.tc4_pir", 1, null, null, null, 2200000);
					};
				};

			};
			object UDPEcho  {

				param SmartEdgeAddress string notify(0,0,2) readwrite rdb("installdiag.udpecho.smartedgeaddress", 1, null, null, null,"0.0.0.0");
				param MPLSTag uint notify(0,0,2) readwrite rdb("installdiag.udpecho.mplstag", 1, null, null, null,0);
				param CoS uint notify(0,0,2) readwrite rdb("installdiag.udpecho.cos", 1, null, null, null,0);
				param CoSToEXP string notify(0,0,2) readwrite rdb("installdiag.udpecho.costoexp", 1, null, null, null,"0,1,2,3,4,5,6,7");
				param CoSToDSCP string notify(0,0,2) readwrite rdb("installdiag.udpecho.costodscp", 1, null, null, null,"0,0,0,16,32,40,0,0");
				param InterfaceAddress string notify(0,0,2) readwrite rdb("installdiag.udpecho.interfaceaddress", 1, null, null, null,"0.0.0.0");
				param InterfaceNetmask string notify(0,0,2) readwrite rdb("installdiag.udpecho.interfacenetmask", 1, null, null, null,"0.0.0.0");
				param ServerAddress string notify(0,0,2) readwrite rdb("installdiag.udpecho.serveraddress", 1, null, null, null,"0.0.0.0");
				param ServerPort uint notify(0,0,2) readwrite rdb("installdiag.udpecho.serverport", 1, null, null, null,0);
				param PacketCount uint notify(0,0,2) readwrite rdb("installdiag.udpecho.packetcount", 1, null, null, null,0);
				param PacketSize uint notify(0,0,2) readwrite rdb("installdiag.udpecho.packetsize", 1, null, null, null,20);
				param PacketInterval uint notify(0,0,2) readwrite rdb("installdiag.udpecho.packetinterval", 1, null, null, null,1000);
				param StragglerTimeout uint notify(0,0,2) readwrite rdb("installdiag.udpecho.stragglertimeout", 1, null, null, null,5000);

			};
		};

		object StatsMonitoring{
			object Configuration{
 				param TimeReference datetime notify(0,0,2) readwrite rdb("statsmonitoring.configuration.timereference", 1, null, null, null, 1293840000);
				param SampleInterval uint notify(0,0,2) readwrite rdb("statsmonitoring.configuration.sampleinterval", 1, null, null, null, 900);
				param ReportSamples  uint notify(0,0,2) readwrite rdb("statsmonitoring.configuration.reportsamples", 1, 0, 400, null, 192);
				param SampleEnable   bool notify(0,0,2) readwrite rdb("statsmonitoring.configuration.sampleenable", 1, null, null, null,1);
			};

			object Sample{
				param SampleTime string notify(0,0,2) readonly dynamic('statsmonitor',"");
				object CPU
				{
					object Stats
					{
						param MinUsage string notify(0,0,2) readonly dynamic('statsmonitor',"");
						param MaxUsage string notify(0,0,2) readonly dynamic('statsmonitor',"");
						param AverageUsage string notify(0,0,2) readonly dynamic('statsmonitor',"");
					};
				};
				object Memory
				{
					object Stats
					{
						param MinUsage string notify(0,0,2) readonly dynamic('statsmonitor',"");
						param MaxUsage string notify(0,0,2) readonly dynamic('statsmonitor',"");
						param AverageUsage string notify(0,0,2) readonly dynamic('statsmonitor',"");
					};
				};

				object Radio
				{
					object Signal{
						param RSRP0 string notify(0,0,2) readonly dynamic('statsmonitor',"");
						param RSRP1 string notify(0,0,2) readonly dynamic('statsmonitor',"");
						param CINR0 string notify(0,0,2) readonly dynamic('statsmonitor',"");
						param CINR1 string notify(0,0,2) readonly dynamic('statsmonitor',"");
						param TxPower string notify(0,0,2) readonly dynamic('statsmonitor',"");
					};
				};
				collection AVC  dynamic('statsmonitor', ''){
					default{
						object Stats{
							param BytesSent string notify(0,0,2) readonly dynamic('statsmonitor',"");
							param BytesReceived string notify(0,0,2) readonly dynamic('statsmonitor',"");
							param FramesSent  string notify(0,0,2) readonly dynamic('statsmonitor',"");
							param FramesReceived  string notify(0,0,2) readonly dynamic('statsmonitor',"");
						};
					};
				};
				collection UNID  dynamic('statsmonitor', ''){
					default{

						object Stats{
							param BytesSent string notify(0,0,2) readonly dynamic('statsmonitor',"");
							param BytesReceived string notify(0,0,2) readonly dynamic('statsmonitor',"");
						};
					};
				};
			};

		};
		object Dot1ag {
			object Mda {
				param PeerMode	bool	notify(0,0,2)  readwrite rdb("dot1ag.mda.peermode", 1, null, null, null, 0);
				param MdLevel	uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.mdlevel", 1, 0, 7, null, 2);
				param PrimaryVid uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.primaryvid", 1, null, null, null, 0);
				param MDFormat	uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.mdformat", 1, 1, 4, null, 1);
				param MdIdType2or4	string	notify(0,0,2)  readwrite rdb("dot1ag.mda.mdidtype2or4", 1, null, null, null, "MD1");
				param MaFormat	uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.maformat", 1, 1, 4, null, 2);
				param MaIdType2	string	notify(0,0,2)  readwrite rdb("dot1ag.mda.maidtype2", 1, null, null, null, "MA1");
				param MaIdNonType2	uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.maidnontype2", 1, null, null, null, 0);
				param CCMInterval	uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.ccminterval", 1, 0, 7, null, 4);
				param AVCID			string notify(0,0,2)  readwrite rdb("dot1ag.mda.avcid", 1, null, null, null, '');
				param GetStats		bool	notify(0,0,2)  readwrite rdb("dot1ag.mda.getstats", 0, null, null, null, 0);
				param lowestAlarmPri	uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.lowestalarmpri", 1, 1, 6, null, 2);
				param errorCCMdefect	bool	notify(0,0,2)  readonly rdb("dot1ag.mda.errorccmdefect", 0, null, null, null, 0);
				param xconCCMdefect	bool	notify(0,0,2)  readonly rdb("dot1ag.mda.xconccmdefect", 0, null, null, null, 0);
				param CCMsequenceErrors	uint	notify(0,0,2)  readonly rdb("dot1ag.mda.ccmsequenceerrors", 0, null, null, null, 0);
				param fngAlarmTime	uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.fngalarmtime", 1, 250, 10000, null, 2500);
				param fngResetTime	uint	notify(0,0,2)  readwrite rdb("dot1ag.mda.fngresettime", 1, 250, 10000, null, 10000);
				param someRMEPCCMdefect	uint	notify(0,0,2)  readonly rdb("dot1ag.mda.somermepccmdefect", 0, null, null, null, 0);
				param someMACstatusDefect	uint	notify(0,0,2)  readonly rdb("dot1ag.mda.somemacstatusdefect", 0, null, null, null, 0);
				param someRDIdefect	uint	notify(0,0,2)  readonly rdb("dot1ag.mda.somerdidefect", 0, null, null, null, 0);
				param highestDefect	uint	notify(0,0,2)  readonly rdb("dot1ag.mda.highestdefect", 0, null, null, null, 0);
				param fngState	uint	notify(0,0,2)  readonly rdb("dot1ag.mda.fngstate", 0, null, null, null, 0);
				param Status	string	notify(0,0,2)  readonly rdb("dot1ag.mda.status", 0, null, null, null, "1AG is not installed");
			};
			object Lmp {
				param MEPactive	bool	notify(0,0,2)  readwrite rdb("dot1ag.lmp.mepactive", 1, null, null, null, 0);
				param mpid	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.mpid", 1, 1, 8191, null, 1);
				param direction	int	notify(0,0,2)  readwrite rdb("dot1ag.lmp.direction", 1, -1, 2, null, 1);
				param port	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.port", 1, null, null, null, 0);
				param vid	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.vid", 1, null, null, null, 0);
				param vidtype	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.vidtype", 1, null, null, null, 0);
				param macAdr	string	notify(0,0,2)  readwrite rdb("dot1ag.lmp.macadr", 1, null, null, null, "");
				param CCMenable	bool	notify(0,0,2)  readwrite rdb("dot1ag.lmp.ccmenable", 1, null, null, null, 0);
				param CCMsent	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.ccmsent", 0, null, null, null, 0);
				param xconnCCMdefect	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.xconnccmdefect", 0, null, null, null, 0);
				param errorCCMdefect	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.errorccmdefect", 0, null, null, null, 0);
				param CCMsequenceErrors	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.ccmsequenceerrors", 0, null, null, null, 0);
				param Status	string	notify(0,0,2)  readonly rdb("dot1ag.lmp.status", 0, null, null, null, "");
				param CoS	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.cos", 1, null, null, null, 0);
				param LBRsInOrder	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.lbrsinorder", 0, null, null, null, 0);
				param LBRsOutOfOrder	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.lbrsoutoforder", 0, null, null, null, 0);
				param LBRnoMatch	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.lbrnomatch", 0, null, null, null, 0);
				param LBRsTransmitted	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.lbrstransmitted", 0, null, null, null, 0);
				param LTRsUnexpected	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltrsunexpected", 0, null, null, null, 0);
			};
			collection Rmp dynamic('ethoam', "") {
				default {
					param mpid 	uint	notify(0,0,2)  readwrite dynamic('ethoam', 0);
					param ccmDefect	bool	notify(0,0,2)  readonly dynamic('ethoam', 0);
					param lastccmRDI	bool	notify(0,0,2)  readonly dynamic('ethoam', 0);
					param lastccmPortState	uint	notify(0,0,2)  readonly dynamic('ethoam', 0);
					param lastccmIFStatus	uint	notify(0,0,2)  readonly dynamic('ethoam', 0);
					param lastccmSenderID	uint	notify(0,0,2)  readonly dynamic('ethoam', 0);
					param lastccmmacAddr	string	notify(0,0,2)  readonly dynamic('ethoam', '');
				};
			};
			object Ltm {
				param send	bool	notify(0,0,2)  readwrite rdb("dot1ag.lmp.ltm.send", 0, null, null, null, 0);
				param rmpid	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.ltm.rmpid", 1, 0, 8191, null, 0);
				param destmac	string	notify(0,0,2)  readwrite rdb("dot1ag.lmp.ltm.destmac", 1, null, null, null, "");
				param flag	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.ltm.flag", 1, 0, 255, null, 0);
				param ttl	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.ltm.ttl", 1, 0, 255, null, 64);
				param timeout	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.ltm.timeout", 1, null, null, null, 5000);
				param LTMtransID	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltm.ltmtransid", 1, null, null, null, 1);
				param Status	string	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltm.status", 0, null, null, null, "");
			};
			object Ltr {
				param ltmTransId	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltr.ltmtransid", 0, null, null, null, 0);
				param rmpid	 string 	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltr.rmpid", 0, null, null, null, '');
				param srcmac	string	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltr.srcmac", 0, null, null, null, "");
				param flag	string	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltr.flag", 0, null, null, null, "");
				param relayaction	string 	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltr.relayaction", 0, null, null, null, '');
				param ttl	 string 	notify(0,0,2)  readonly rdb("dot1ag.lmp.ltr.ttl", 0, null, null, null, '');
			};
			object Lbm {
				param LBMsToSend	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.lbm.lbmstosend", 0, 0, 64, null, 0);
				param rmpid	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.lbm.rmpid", 1, 0, 8191, null, 0);
				param destmac	string	notify(0,0,2)  readwrite rdb("dot1ag.lmp.lbm.destmac", 1, null, null, null, "");
				param timeout	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.lbm.timeout", 1, null, null, null, 5000);
				param rate	uint	notify(0,0,2)  readwrite rdb("dot1ag.lmp.lbm.rate", 1, null, null, null, 1000);
				param LBMtransID	uint	notify(0,0,2)  readonly rdb("dot1ag.lmp.lbm.lbmtransid", 1, null, null, null, 1);
				param Status	string	notify(0,0,2)  readonly rdb("dot1ag.lmp.lbm.status", 0, null, null, null, "");
			};
		};
	};
};
