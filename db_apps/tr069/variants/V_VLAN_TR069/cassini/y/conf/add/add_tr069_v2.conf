object Device {
	object Ethernet {
		param VLANTerminationNumberOfEntries uint notify(0,0,2) readonly dynamic("v_vlan_tr069_y", 0);
		param XVENDOR(_EnableVLAN) bool notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", "0");
		collection VLANTermination dynamic("v_vlan_tr069_y", "") { ## readwrite
			default {
				param Enable bool notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", "");
				param VLANID string notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", ""); ## Valid range: 0~4094
				param XVENDOR(_Name) string notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", "");
				param XVENDOR(_IPAddress) string notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", "");
				param XVENDOR(_SubnetMask) string notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", "");
				param XVENDOR(_EnableDHCP) bool notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", "");
				param XVENDOR(_DHCPAddressRange) string notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", ""); ## Valid format: start_address,end_address
				param XVENDOR(_DHCPLeaseTime) uint notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", ""); ## Valid range: >= 120
				param XVENDOR(_AllowAdminAccess) bool notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", "");
			};
		};
	};

	object Cellular {
		collection AccessPoint dynamic("cellularDevice", "") {
			default {
				object XVENDOR() {
					param MapToVLAN string notify(0,0,2) readwrite dynamic("v_vlan_tr069_y", ""); ## Valid format: Full pathname of corresponding VLANTermination object with ending period(.) character or empty string to unset.
				};
			};
		};
	};
};


// END OF FILE: Do Not delete this line
