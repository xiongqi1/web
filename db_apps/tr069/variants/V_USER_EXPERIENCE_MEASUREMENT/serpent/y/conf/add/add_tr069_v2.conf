object Device {
	object Cellular {
                object XVENDOR(_AccessPoint_Performance) {
			param RTTTrackingMode uint notify(0,0,2) readwrite dynamic('performanceMeasure', 0); ## Select RTT Tracking mode ( 0=SYN-SYN/ACK, 1=SYN-SYN/ACK-ACK ). By default, SYN-SYN/ACK is used.
			param MeasurementPeriod uint notify(0,0,2) readwrite dynamic('performanceMeasure', 60); ## Throughput measurement and passive latency record Period in minutes (by default 60 minutes).
			param InstantaneousSamplingPeriod uint notify(0,0,2) readwrite dynamic('performanceMeasure', 3); ## Instantaneous sampling period to measure peak throughput in seconds (by default 3 seconds).
			param NumberOfMeasureRecords uint notify(0,0,2) readwrite dynamic('performanceMeasure', 25); ## size of a comma delimited list of measurement result.
			param IdleTrafficLimitDownlink uint notify(0,0,2) readwrite dynamic('performanceMeasure', 100); ## Downlink threshold to detect idle traffic (Kbit per second).
			param IdleTrafficLimitUplink uint notify(0,0,2) readwrite dynamic('performanceMeasure', 50); ## Uplink threshold to detect idle traffic (Kbit per second).
			param Timestamps string notify(0,0,2) readonly rdb("performance.measurement.timestamps", 0, 0, null, null, ""); ## a comma delimited list of C epoch time-stamps.
		};
		collection AccessPoint dynamic("cellularDevice", "") { ##readonly
			default {
                                object XVENDOR(_Performance) {
					param Enable bool notify(0,0,2) readwrite dynamic('performanceMeasure', 0); ## Enable or disable the throughput and latency measurement feature
					param Latency string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of the latency of the collections in msec.
					param PeakDownlinkThroughput string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of downlink peak throughput (Bit per second)
					param AverageDownlinkBytesReceived string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of average received bytes
					param AverageDownlinkTimeDuration string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of time duration whose traffic is greater than IdleTrafficLimitDownlink
					param AverageDownlinkThroughput string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of downlink average throughput (Bit per second)
					param PeakUplinkThroughput string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of uplink peak throughput (Bit per second)
					param AverageUplinkBytesSent string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of average sent bytes
					param AverageUplinkTimeDuration string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of time duration whose traffic is greater than IdleTrafficLimitUplink
					param AverageUplinkThroughput string notify(0,0,2) readonly dynamic('performanceMeasure', ''); ## a comma delimited list of time uplink average throughput (Bit per second)
				};
			};
		};
	};
};

// END OF FILE: Do Not delete this line
