object InternetGatewayDevice {
	object X_NETCOMM_WEBUI {
		object Services {
			object DynamicDNS {
				param Enable_DDNS bool notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', "");
				param DDNS_Available_Server_Lists string notify(0,0,2) readonly rdb("service.ddns.serverlist", 1, 0, 256, null, "");
				param DDNS_Server string notify(0,0,2) readwrite rdb("service.ddns.server", 1, 0, 256, null, "");
				param DDNS_Hostname string notify(0,0,2) readwrite rdb("service.ddns.hostname", 1, 0, 128, null, "");
				param DDNS_Username string notify(0,0,2) readwrite rdb("service.ddns.user", 1, 0, 128, null, "");
				param DDNS_Password string notify(0,0,2) readwrite rdb("service.ddns.password", 1, 0, 128, null, "");
			};
//			object NTP {
//				object TimezoenSettings {
//					param Current_Time string notify(0,0,2) readonly dynamic('???', "");
//					param Timezone string notify(0,0,2) readwrite dynamic('???', "");
//					param Daylight_Savings_Time_Schedule string notify(0,0,2) readonly dynamic('???', "");
//				};
//				object NTPSettings {
//					param Enable_NTP bool notify(0,0,2) readwrite dynamic('???', "");
//					param NTP_Service string notify(0,0,2) readwrite dynamic('???', "");
//				};
//			};
			object SystemMonitor {
				object PeriodicPingSettings {
					param First_Dest_Addr string notify(0,0,2) readwrite rdb("service.systemmonitor.destaddress", 1, 0, 256, null, "");
					param Second_Dest_Addr string notify(0,0,2) readwrite rdb("service.systemmonitor.destaddress2", 1, 0, 256, null, "");
					param Periodic_PING_Timer uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', "");  # (0=disable, 300-65535) secs
					param Periodic_PING_Acc_Timer uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', ""); # (0=disable, 60-65535) secs
					param Fail_Count uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', ""); # (0=disable, 1-65535) times
				};
				object PeriodicReboot {
					param Force_reboot_every uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', ""); # (0=disable, 5-65535) mins
					param Randomize_reboot_time uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', ""); # (Available value: 1/2/3/5/10/15/20/25/30/35/45/60, unit:minutes - should be less than Force_reboot_every)
				};
			};
			object SNMP {
				object SNMPConfiguration {
					param Enable_SNMP bool notify(0,0,2) readwrite rdb("service.snmp.enable", 1, null, null, null, 0);
					param SNMP_RO_CommName string notify(0,0,2) readwrite rdb("service.snmp.name.readonly", 1, 0, 256, null, "public");
					param SNMP_RW_CommName string notify(0,0,2) readwrite rdb("service.snmp.name.readwrite", 1, 0, 256, null, "private");
					param SNMP_mib_info string notify(0,0,2) readonly dynamic('x_netcomm_webui_y_services', "");
				};
				object SNMPTraps {
					param Trap_Destination string notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', ""); # Should have available ip address format
					param Heartbeat_Interval uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', ""); # 0 or greater than
					param Trap_Persistence_Time uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', ""); # 0 or greater than
					param Trap_Retransmission_Time uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_services', ""); # 0 or greater than
					param Send_Heartbeat_Now bool notify(0,0,2) writeonly dynamic('x_netcomm_webui_y_services', ""); # available value is only 1
				};
			};
		};

		object System {
			object Administration {
				object LEDOperation {
					param LEDPowerOffTimer uint notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_system', 0);  # Default Value: 0(Always On), Available Value: 0~65535 minutes (0=Always On)
				};
			};
		};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NOT completed yet. Comment out
//		object System {
//			object Administration {
//				object Firewall {
//					param Firewall_Enable bool notify(0,0,2) readwrite rdb("admin.firewall.enable", 1, null, null, null, 0);
//					param HTTP_Enable bool notify(0,0,2) readwrite rdb("admin.remote.webenable", 1, null, null, null, 0);
//					param HTTP_Port uint notify(0,0,2) readwrite rdb("admin.remote.port", 1, 1, 65534, null, 8080);
//					param HTTPS_Enable bool notify(0,0,2) readwrite rdb("admin.remote_https.enable", 1, null, null, null, 0);
//					param HTTPS_Port uint notify(0,0,2) readwrite rdb("admin.remote_https.port", 1, 1, 65534, null, 443);
//					param Telnet_Enable bool notify(0,0,2) readwrite rdb("admin.remote.telnetenable", 1, null, null, null, 0);
//					param Ping_Enable bool notify(0,0,2) readwrite rdb("admin.remote.pingenable", 1, null, null, null, 0);
//				};
//				object WebUserInterfaceAccount {
//					param root_Password string notify(0,0,2) writeonly dynamic('x_netcomm_webui_y_system', "");
//					param admin_Password string notify(0,0,2) writeonly dynamic('x_netcomm_webui_y_system', "");
//				};
//				object TelnetAccount {
//					param root_Password string notify(0,0,2) writeonly dynamic('x_netcomm_webui_y_system', "");
//				};
//			};
//			object SystemConfiguration {
//				object RemoteSyslogServer {
//					param Enable_LogTofile bool notify(0,0,2) readwrite rdb("service.syslog.option.logtofile", 1, null, null, null, 0);
//					param Hostname string notify(0,0,2) readwrite dynamic('x_netcomm_webui_y_system', "");
//				};
//				object TCPKeepaliveSettings {
//					param Enable bool notify(0,0,2) readwrite rdb("system.config.tcp_keepalive_enable", 1, null, null, null, 0);
//					param Keepalive_Time uint notify(0,0,2) readwrite rdb("system.config.tcp_keepalive_time", 1, 60, 65535, null, 1800);
//					param Keepalive_Interval uint notify(0,0,2) readwrite rdb("system.config.tcp_keepalive_intvl", 1, 10, 28800, null, 60);
//					param Keepalive_Probes uint notify(0,0,2) readwrite rdb("system.config.tcp_keepalive_probes", 1, 1, 1000, null, 9);
//				};
//			};
//		};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	};
};


// END OF FILE: Do Not delete this line