object Device {
	object DeviceInfo {
		param ProductClass string notify(0,0,2) readonly const("ODU"); ## fixed value as per customer
		param SerialNumber string notify(0,0,2) readonly rdb("systeminfo.udid", 0, 0, 64, null, "");
	};

	object X_NOKIA_COM_LTTH_ODU { ## Nokia LTTH CPE Proprietary object
		object system {
			param state string notify(0,0,2) readonly dynamic("ltth", "0"); ## current odu device state
			param startFailureRootCause string notify(0,0,2) readonly dynamic("ltth", "0"); ## detailed reason why odu startup has failed
			param connectionLosses uint notify(0,0,2) readonly dynamic("ltth", 0); ## the number of times LTE connection has been lost since startup
			param averageCellRSRQ int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of measured 3gpp lte rsrq value
			param averageCellRSRP int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of measured cell rsrp
			param networkUpTime uint notify(0,0,2) readonly dynamic("ltth", 0); ## time since startup lte network has been up
			param networkDownTime uint notify(0,0,2) readonly dynamic("ltth", 0); ## time since startup lte network has been down
			param averageCellCQI int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell CQI
			param averageCellTx_Power_PUCCH int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.Tx_Power_PUCCH added with value 100
			param averageCellSINR int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.SINR
			param averageCellSNR int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.SNR
			param averageCellDL_PRB_Num int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.DL_PRB_Num
			param averageCellPathloss int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.averagePathloss
			param averageCellTx_Power_PUSCH int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.Tx_Power_PUSCH added with value 100
			param averageCellUL_PRB_Num int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.UL_PRB_Num
			param averageCellDL_PDCP_TP int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.DL_PDCP_TP
			param averageCellUL_PDCP_TP int notify(0,0,2) readonly dynamic("ltth", -1); ## sliding 24-h average of cell.UL_PDCP_TP
			param informTrigger string notify(2,2,2) readwrite rdb("ltth.tr069.inform.trigger", 0, 0, 64, null, "0"); ## a dummy parameter for ltthd to trigger an Inform
		};
		object antenna {
			param vAngle int notify(0,0,2) readonly dynamic("ltth", 0); ## antenna current vertical angle value
			param hAngle int notify(0,0,2) readonly dynamic("ltth", 0); ## antenna current horizontal angle value
			param Mode string notify(0,0,2) readonly dynamic("ltth", "0"); ## antenna current beam forming mode
		};
		object cell {
			param Id string notify(0,0,2) readonly dynamic("ltth", "0"); ## current lte cell id
			param RSRP int notify(0,0,2) readonly dynamic("ltth", -1); ## current measured 3gpp lte rsrp value
			param RSRQ int notify(0,0,2) readonly dynamic("ltth", -1); ## current measured 3gpp lte rsrq value
			param CQI int notify(0,0,2) readonly dynamic("ltth", -1); ## current measured 3gpp lte channel quality indicator (CQI) value
			param Tx_Power_PUCCH int notify(0,0,2) readonly dynamic("ltth", -1); ## UL Tx Power, Physical Uplink Control Channel added with value 100
			param Tx_Power_PUSCH int notify(0,0,2) readonly dynamic("ltth", -1); ## UL Tx Power, Physical Uplink Shared Channel added with value 100
			param Pathloss int notify(0,0,2) readonly dynamic("ltth", -1); ## difference in power, between sent by eNB and received by UE
			param SINR int notify(0,0,2) readonly dynamic("ltth", -1); ## signal to noise and interference ratio
			param SNR int notify(0,0,2) readonly dynamic("ltth", -1); ## signal to noise ratio added by 20
			param MCS string notify(0,0,2) readonly dynamic("ltth", "N/A"); ## modulation and coding scheme
			param QPSK_Rate int notify(0,0,2) readonly dynamic("ltth", -1); ## lowest modulation (4-QAM) used time percentage
			param 16_QAM_Rate int notify(0,0,2) readonly dynamic("ltth", -1); ## 16-QAM modulation used time percentage
			param 64_QAM_Rate int notify(0,0,2) readonly dynamic("ltth", -1); ## 64-QAM modulation used time percentage
			param Transmission_mode int notify(0,0,2) readonly dynamic("ltth", -1); ## transmission mode used
			param Transmission_mode1_Rate int notify(0,0,2) readonly dynamic("ltth", -1); ## transmission mode1 used time percentage
			param Transmission_mode2_Rate int notify(0,0,2) readonly dynamic("ltth", -1); ## transmission mode2 used time percentage
			param DL_PRB_Num int notify(0,0,2) readonly dynamic("ltth", -1); ## unit of allocation
			param UL_PRB_Num int notify(0,0,2) readonly dynamic("ltth", -1); ## unit of allocation
			param DL_PDCP_TP int notify(0,0,2) readonly dynamic("ltth", -1); ## downlink packet data convergence protocol throughput
			param UL_PDCP_TP int notify(0,0,2) readonly dynamic("ltth", -1); ## uplink packet data convergence protocol throughput
		};
		object config {
			param antennaFrequency int notify(0,0,2) readonly dynamic("ltth", -1); ## assigned lte frequency in MHz
			param cellId string notify(0,0,2) readonly dynamic("ltth", "0"); ## assigned lte cell id
			param cellSettings string notify(0,0,2) readwrite dynamic("ltth", ""); ## comma-separated set of cellId,hAngle,antennaFrequency,freqChannel,pci,freqId
			param iduUDID string notify(2,0,2) readonly rdb("systeminfo.idu.udid", 0, 0, 256, null, ""); ## comma-separated list of IDU UDIDs connected to the ODU. Empty string if not connected
			param cellPci int notify(0,0,2) readwrite dynamic("ltth", 0); ## physical cell id for the assigned cell
			param instructedTiltAngle int notify(0,0,2) readonly dynamic("ltth", 0); ## the angle the antenna should be manually tilted
			param variantVersionName string notify(0,0,2) readonly dynamic("ltth", ""); ## factory-configured variant version name
		};
		object measurements {
			param badSignal int notify(0,0,2) writeonly dynamic("ltth", 0); ## ltth-c sets this value to 1 if measurement indicated bad signal and to 0 otherwise
		};
		object device {
			param tz string notify(0,0,2) readwrite dynamic("ltth", "UTC"); ## time zone in Olson format
		};
	};
};


// END OF FILE: Do Not delete this line
