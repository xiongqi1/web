object InternetGatewayDevice {
	object ManagementServer {
		param URL string notify(0,0,2) readwrite rdb("tr069.server.url", 1, 1, 256, 'URL', "https://acs.scgmproject.com/cpe.php");
	}
	// Time:2 Profile
	object Time {
		param NTPServer1 string notify(0,0,2) readwrite rdb("service.ntp.server_address", 1, 0, 64, null, "0.uk.pool.ntp.org");
	};
	object DeviceInfo {
		param X_NETCOMM_DeviceLogCaptureLevel uint notify(0,0,2) readwrite rdb("service.syslog.option.capturelevel", 0, 0, 8, null, 7); 
	};

	object X_NETCOMM {
		object WirelessModem {
			object Status {
				param ModuleVoltage string notify(0,0,2) readonly rdb('wwan.0.radio.voltage', 0, 0, 64, null, '');
				param ModuleTemperature string notify(0,0,2) readonly rdb('wwan.0.radio.temperature', 0, 0, 64, null, '');
				param RSCP0 string notify(0,0,2) readonly dynamic('x_netcomm_y', '');
				param RSCP1 string notify(0,0,2) readonly dynamic('x_netcomm_y', '');
				param EcIo0 string notify(0,0,2) readonly dynamic('x_netcomm_y', '');
				param EcIo1 string notify(0,0,2) readonly dynamic('x_netcomm_y', '');
				param RSRP string notify(0,0,2) readonly dynamic('x_netcomm_y', '');
				param RSRQ string notify(0,0,2) readonly dynamic('x_netcomm_y', '');
				param RoamingStatus bool notify(0,0,2) readonly dynamic('x_netcomm_y', '0');
				param DCInputVoltage string notify(0,0,2) readonly dynamic('x_netcomm_y', '');  # voltage of DC input, unit: v
				param PowerInputMode string notify(0,0,2) readonly dynamic('x_netcomm_y', '');  # Power input mode, Possible Value: DCJack, PoE, DCJack+PoE
			};
		};
		object hgw {
			param SelectWANInterface string notify(0,0,2) readwrite rdb("hgw.SelectWANInterface", 1, 0, 256, null, "eth0");
			object ZigBee {

				param MeterLinkKey string notify(0,0,2) readwrite rdb("zigbee.conf.MeterLinkKey", 1, 0, 256, null, "");
				param MeterChannel uint notify(0,0,2) readonly rdb('zigbee.join.channel', 0, 0, 16, null, 0);
				param MeterPanID uint notify(0,0,2) readonly rdb('zigbee.join.panid', 0, 0, 65535, null, 0);
				param SensorLinkKey string notify(0,0,2) readwrite rdb("zigbee.conf.SensorLinkKey", 1, 0, 256, null, "");
				param SensorChannel uint notify(0,0,2) readonly rdb('zigbee.form.channel', 0, 0, 16, null, 0);
				param SensorPanID uint notify(0,0,2) readonly rdb('zigbee.form.panid', 0, 0, 65535, null, 0);
				param ProcessMonitorInterval uint notify(0,0,2) readwrite rdb("hgw.ZigBee.ProcessMonitorInterval", 0, 60, 7200, null, 3600);
			};
			object xems {
				param ProcessMonitorInterval uint notify(0,0,2) readwrite rdb("hgw.xems.ProcessMonitorInterval", 0, 60, 7200, null, 3600);
				param DeviceListNumberOfEntries uint notify(0,0,2) readwrite rdb("hgw.xems.DeviceListNumberOfEntries", 0, 0, 20, null, 0); # Number of entries in Device list table
				param CategoryListNumberOfEntries uint notify(0,0,2) readwrite rdb("hgw.xems.CategoryListNumberOfEntries", 0, 0, 20, null, 10); # Number of entries in Category list table
				collection DeviceList rdbobj('hgw.xems.DeviceList', 0, null, 1) {
					default{
						param deviceID string notify(0,0,2) readwrite rdbmem('deviceID', 0, 255, null, ""); # Device ID
						param SerialNumber string notify(0,0,2) readwrite rdbmem('SerialNumber', 0, 255, null, ""); # Device MAC address
						param MACAddress string notify(0,0,2) readwrite rdbmem('MACAddress', 0, 255, null, ""); # Device MAC address
						param addDeviceFlag string notify(0,0,2) readwrite rdbmem('addDeviceFlag', 0, 255, null, ""); # Device MAC address
					};
				};
				collection CategoryList rdbobj('hgw.xems.CategoryList', 0, null, 1) {
					default{
						param SensorType string notify(0,0,2) readwrite rdbmem('SensorType', 0, 255, null, ""); # Device ID
						param DataType string notify(0,0,2) readwrite rdbmem('DataType', 0, 255, null, ""); # Device MAC address
						param InfoType string notify(0,0,2) readwrite rdbmem('InfoType', 0, 255, null, ""); # Device MAC address
					};
				};
			};
		};
	};
};


// END OF FILE: Do Not delete this line
