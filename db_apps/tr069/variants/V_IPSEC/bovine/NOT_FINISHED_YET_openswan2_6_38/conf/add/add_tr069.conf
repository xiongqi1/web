object InternetGatewayDevice {
	object X_NETCOMM_WEBUI {
		object Networking {
			object VPN {
				object IPsec {
					param IPsecNumberOfEntries uint notify(0,0,2) readonly dynamic('v_ipsec_openswan2_6_38_ipsec', 0);

					collection Profiles dynamic('v_ipsec_openswan2_6_38_ipsec', "") { # support AddObject/DeleteObject method
						default {
							param Enable_Profile bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 0, Available: 0|1
							param Profile_Name string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);
							param Remote_IPSec_server_address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 0.0.0.0, Available: IP Address
							param Remote_LAN_address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 0.0.0.0, Available: IP Address
							param Remote_LAN_subnet_mask string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 255.255.255.0, Available: NetMask
							param Local_LAN_address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 0.0.0.0, Available: IP Address
							param Local_LAN_subnet_mask string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 255.255.255.0, Available: NetMask
							param Encapsulation_type string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: esp, Available: any|esp|ah
							param IKE_mode string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: main, Available: any|main|aggressive
							param PFS bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 1, Available: 0|1
							param IKE_encryption string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: any, Available: any|aes|aes128|aes192|aes256|3des|des
							param IKE_hash string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: any, Available: any|md5|sha1
							param IPSec_encryption string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: any, Available: any|aes|aes128|aes192|aes256|3des|des
							param IPSec_hash string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: any, Available: any|md5|sha1
							param DH_group string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: any, Available: any|modp768|modp1024|modp1536|modp2048|modp3072|modp4096|modp6144|modp8192
							param DPD_action string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: hold, Available: none|clear|hold|restart
							param DPD_keep_alive_time uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 10, Unit: secs
							param DPD_timeout uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 60, Unit: secs
							param IKE_rekey_time uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 3600, Available: 0-78400, 0=Unlimited,  Unit: secs
							param SA_life_time uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: 28800, Available: 0-78400, 0=Unlimited,  Unit: secs
							param Key_mode string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Default: psk, Available: psk(preSharedKeys), rsa(RSA keys), cert(Certificates)

							object PreSharedKey {
								param PreSharedKey string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");
								param Remote_Id string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");
								param Local_Id string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");
							};
							object RASKeys {
								param Remote_Id string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");
								param Local_Id string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");
								param Generate_Local_RSA_key string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', 0);  # Available SET Value: 'true' --> generates new key
								param Upload_Local_RSA_key string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");  # GET: Stauts of uploaded file ex: "Uploaded","Not uploaded", "Uploaded but not valid" # SET: URL to download file, ex: "ftp://username:password@sample.com/filename.key"
								param Upload_Remote_RSA_key string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");  # GET: Stauts of uploaded file ex: "Uploaded","Not uploaded", "Uploaded but not valid" # SET: URL to download file, ex: "ftp://username:password@sample.com/filename.key"
							};
							object Certificates {
								param Private_Key_Pass_Phrase string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");
								param Upload_Local_Private_Key string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");  # GET: Stauts of uploaded file ex: "Uploaded","Not uploaded", "Uploaded but not valid" # SET: URL to download file, ex: "ftp://username:password@sample.com/filename.key"
								param Upload_Local_Public_Certificate string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");  # GET: Stauts of uploaded file ex: "Uploaded","Not uploaded", "Uploaded but not valid" # SET: URL to download file, ex: "ftp://username:password@sample.com/filename.crt"
								param Upload_Remote_Public_Certificate string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");  # GET: Stauts of uploaded file ex: "Uploaded","Not uploaded", "Uploaded but not valid" # SET: URL to download file, ex: "ftp://username:password@sample.com/filename.crt"
								param Upload_CA_Certificate string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");  # GET: Stauts of uploaded file ex: "Uploaded","Not uploaded", "Uploaded but not valid" # SET: URL to download file, ex: "ftp://username:password@sample.com/filename.crt"
								param Upload_CRL_Certificate string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_ipsec', "");  # GET: Stauts of uploaded file ex: "Uploaded","Not uploaded", "Uploaded but not valid" # SET: URL to download file, ex: "ftp://username:password@sample.com/filename.crt"
							};
						};
					};
				};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				object OpenVPN {
					object Server {
						param OpenVPNServerNumberOfEntries uint notify(0,0,2) readonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);

						collection Profiles dynamic('v_ipsec_openswan2_6_38_openvpn_server', "") { # support AddObject/DeleteObject method, but only 1 instance can be created
							default {
								param Enable_Profile bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Default: 0, Available: 0|1
								param Profile_Name string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);
								param Server_Port uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Default: 1194,
								param Server_Protocol string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Default: UDP, Available: UDP|TCP
								param VPN_Network_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Default: 10.0.0.0, Available: IP Address
								param VPN_Network_SubnetMask string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Default: 255.255.255.0, Available: Subnet Mask
								param Generate_DH string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Available set value: "true" - to generate DH, get method refers to the result of the last attempt, set method is a trigger to generate DH key.
								param Authentication_Type bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Default: 0, Available: 0(Certificat)|1(Username/Password)

								object Server_Certificates {
									param Generate_CA string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # This parameter is to generate new server cerrificate - set method format: C="Country"; ST="State"; L="City"; O="Organisation"; E="Email"; (Allowed characters: a~z A~Z 0~9 @ _ - . and space)
									param Server_Certificate_Info string notify(0,0,1) readonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Format: Country,State,City,Organisation,CommonName,Email/Not Before,Not After/
								};

								object Certificate_Management {
									param Generate string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # This parameter is to generate client certificate - set method format: N="CertiName"; C="Country"; ST="State"; L="City"; O="Organisation"; E="Email"; (Allowed characters: a~z A~Z 0~9 @ _ - . and space) (with regard to CertiName, this should be unique to generate new client certificate. If using the name already existing, this method returns failure)
									param Upload string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Available set parameter format: "CertiName", "URL"     (Example of URL: "ftp://username:password@sample.com/path/" or "http://sample.com/path/" - verify URL has only directory name to upload a certificate named "CertiName.tgz". So "http://sample.com/path/filename" is invalid.
									param Revoke string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # This parameter is to revoke a client certificate - set value: CertiName (the name of client certificate)
									param Set_Network_Information string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Available set parameter format: "CertiName", "Network Address", "Network Mask"
									param Client_Certificates_Info string notify(0,0,1) readonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Format: [CertiName,Country,State,City,Organisation,Email,Revoked,[NetworkAddress NetworkMask]], [...]
								};

								object Username_Password {
									param Username string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);
									param Password string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);
									param Upload_CA string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Available set parameter format: "URL"     (Example of URL: "ftp://username:password@sample.com/path/" or "http://sample.com/path/" - verify URL has only directory name to upload a CA certificate named "ca.tgz". So "http://sample.com/path/filename" is invalid.
									param Set_Network_Information string notify(0,0,0) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # Available set parameter format: "Network Address", "Network Mask"
									param Network_Information string notify(0,0,1) readonly dynamic('v_ipsec_openswan2_6_38_openvpn_server', 0);  # NetworkAddress NetworkMask
								};
							};
						};
					};

					object Client {
						param OpenVPNClientNumberOfEntries uint notify(0,0,2) readonly dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);

						collection Profiles dynamic('v_ipsec_openswan2_6_38_openvpn_client', "") { # support AddObject/DeleteObject method
							default {
								param Enable_Profile bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);  # Default: 0, Available: 0|1
								param Profile_Name string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
								param Server_IP_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);  # Available: IP Address
								param Server_Port uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);  # Default: 1194,
								param Server_Protocol string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);  # Default: UDP, Available: UDP|TCP
								param Use_Default_Gateway bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);  # Default: 0, Available: 0|1
								param Authentication_Type bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);  # Default: 0, Available: 0(Certificat)|1(Username/Password)

//								object Certificate {
//									param Selected_Certificate string notify(0,0,1) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//									param Installed_Certificates string notify(0,0,1) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//									param Upload_Certificate string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//									param Delete_Certificate string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//								};
//								object Username_Password {
//									param Username string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//									param Password string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//									param Selected_Certificate string notify(0,0,1) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//									param Installed_Certificates string notify(0,0,1) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//									param Download_CA string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//									param Delete_CA string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_client', 0);
//								};
							};
						};
					};

					object P2P {
						param OpenVPNP2PNumberOfEntries uint notify(0,0,2) readonly dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);

						collection Profiles dynamic('v_ipsec_openswan2_6_38_openvpn_peer', "") { # support AddObject/DeleteObject method
							default {
								param Enable_Profile bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Default: 0, Available: 0|1
								param Profile_Name string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);
								param Server_IP_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available: IP Address
								param Server_Port uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Default: 1194,
								param Server_Protocol string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Default: UDP, Available: UDP|TCP
								param Local_IP_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available: IP Address
								param Remote_IP_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available: IP Address

								object Remote_Network {
									param Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available: IP Address
									param Subnet_Mask string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available: NetMask
								};

								object Server_Secret_Key {
									param Update_Time string notify(0,0,2) readonly dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);
									param Generate_Key string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available argument of set method: true. Set true, to generate new Server Secret Key.
									param Upload_Key string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available argument of set method: "URL"     (Example of URL: "ftp://username:password@sample.com/path/" or "http://sample.com/path/" - verify URL has only directory name to upload a Sever Secret Key named "secret.key". So "http://sample.com/path/filename" is invalid.
								};
								object Client_Secret_Key {
									param Update_Time string notify(0,0,2) readonly dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);
									param Download_Key string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available argument of set method: "URL" (Example of URL: "ftp://username:password@sample.com/path/secret.key" - in this case, should be supplied a filename of a secret key)
									param Delete_Key string notify(0,0,0) writeonly dynamic('v_ipsec_openswan2_6_38_openvpn_peer', 0);  # Available argument of set method: true. Set true, to delete Client Secret Key.
								};
							};
						};
					};
				};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				object PPTP {
					param PPTPNumberOfEntries uint notify(0,0,2) readonly dynamic('v_ipsec_openswan2_6_38_pptp', 0);

					collection Profiles dynamic('v_ipsec_openswan2_6_38_pptp', "") { # support AddObject/DeleteObject method
						default {
							param Enable_Profile bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', 0);  # Default: 0, Available: 0|1
							param Profile_Name string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', "");  # Default: "NEW Profile"
							param PPTP_Server_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', "");  # Available: IP Address
							param Username string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', "");
							param Password string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', "");
							param Authentication_Type string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', "any");  # Default: any, Available: any|ms-chap-v2|ms-chap|chap|eap|pap
							param Metric uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', 30);  # Default: 30, Available: 0-65535
							param Use_peer_DNS bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', 0);  # Default: 0, Available: 0|1
							param NAT_Masquerading bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', 0);  # Default: 0, Available: 0|1
							param Set_Default_Route bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', 0);  # Default: 0, Available: 0|1
							param Verbose_logging bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', 0);  # Default: 0, Available: 0|1
							param Reconnect_Delay uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', 30);  # Default: 30, Available: 30-65535 seconds
							param Reconnect_Retries uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_pptp', 0);  # Default: 0, Available: 0-65535, 0=Unlimited
						};
					};
				};
				object GRE {
					param GRENumberOfEntries uint notify(0,0,2) readonly dynamic('v_ipsec_openswan2_6_38_gre', 0);

					collection Profiles dynamic('v_ipsec_openswan2_6_38_gre', "") { # support AddObject/DeleteObject method
						default {
							param Enable_Profile bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', 0);  # Default: 0, Available: 0|1
							param Profile_Name string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', '');  # Default: "NEW Profile"
							param GRE_Server_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', '');  # Available: IP Address
							param Local_Tunnel_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', '');  # Available: IP Address
							param Remote_Tunnel_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', '');  # Available: IP Address
							param Remote_Network_Address string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', '');  # Available: IP Address
							param Remote_Network_Mask string notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', '');  # Available: NetMask
							param TTL uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', 255);  # Default: 255, Available: 0-255
							param Verbose_logging bool notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', 0);  # Default: 0, Available: 0|1
							param Reconnect_Delay uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', 30);  # Default: 30, Available: 30-65535 seconds
							param Reconnect_Retries uint notify(0,0,2) readwrite dynamic('v_ipsec_openswan2_6_38_gre', 0);  # Default: 0, Available: 0-65535, 0=Unlimited
						};
					};
				};
			};
		};
	};
};


// END OF FILE: Do Not delete this line