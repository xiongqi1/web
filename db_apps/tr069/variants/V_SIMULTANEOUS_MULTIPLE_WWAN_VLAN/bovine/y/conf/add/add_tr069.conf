object InternetGatewayDevice {
	param LANDeviceNumberOfEntries uint notify(0,0,2) readonly dynamic('common', "3");
	collection LANDevice const("") {
		object 1 {
			object LANHostConfigManagement {
				param MACAddress string notify(0,0,2) readonly rdb("systeminfo.mac.eth0", 1, null, null, null, "00:00:00:00:00:00");
				param DHCPServerEnable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "1");
				param DHCPRelay bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0");
				param X_NETCOMM_DHCPRelayAddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## DHCP Relay Server address
				param MinAddress string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param MaxAddress string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param ReservedAddresses string notify(0,0,2) readonly dynamic('lanDevice_HostConf', "");  ## Comma-separated list of reserved addresses
				param SubnetMask string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "255.255.255.0");
				param DNSServers string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## Comma-separated list of at most two DNS servers offered to DHCP clients. Not to set specific DNS address, leave the address empty or set to "0.0.0.0"
				param DomainName string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param IPRouters string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## Support only one gateway address (Currently LAN IP is used as a gatway address, so the value applied to this parameter is also applied to the LAN IP address of a router)
				param DHCPLeaseTime int notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "86400");  ## -1(infinite lease) does not support.

				param IPInterfaceNumberOfEntries uint notify(0,0,2) readonly const("1");
				collection IPInterface const("") {
					object 1 {
						param Enable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "1");
						param IPInterfaceIPAddress string notify(0,0,2) readwrite rdb("link.profile.0.address", 1, null, null, null, "192.168.20.1");
						param IPInterfaceSubnetMask string notify(0,0,2) readwrite rdb("link.profile.0.netmask", 1, null, null, null, "255.255.255.0");
						param IPInterfaceAddressingType string notify(0,0,2) readonly const("Static"); # Supported only "Static"
					};
				};

				param DHCPStaticAddressNumberOfEntries uint notify(0,0,2) readonly dynamic('lanDevice_HostConf', "");
				collection DHCPStaticAddress dynamic('lanDevice_HostConf', "") {  ## Supported AddObject/DeleteObject methods
					default {
						param Enable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0");
						param Chaddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "00:00:00:00:00:00");  ## Should be "xx:xx:xx:xx:xx:xx"
						param Yiaddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0.0.0.0");
						param X_NETCOMM_ComputerName string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
					};
				};
			};
			param LANEthernetInterfaceNumberOfEntries uint notify(0,0,2) readonly const("0");
			param LANUSBInterfaceNumberOfEntries uint notify(0,0,2) readonly const("0");
			object Hosts {
				param HostNumberOfEntries uint notify(0,0,2) readonly dynamic('dhcp', "1");
				collection Host dynamic('dhcp', "0") {
					default {
						param IPAddress string notify(0,0,2) readonly dynamic('dhcp', "");
						param AddressSource string notify(0,0,2) readonly const("DHCP");
						param LeaseTimeRemaining int notify(0,0,2) readonly dynamic('dhcp', "-1");
						param MACAddress string notify(0,0,2) readonly dynamic('dhcp', "");
						param HostName string notify(0,0,2) readonly dynamic('dhcp', "");
						param InterfaceType string notify(0,0,2) readonly dynamic('dhcp', "");
						param Active bool notify(0,0,2) readonly const("1");
					};
				};
			};
		};
		
		object 2 {
			object LANHostConfigManagement {
				param MACAddress string notify(0,0,2) readonly rdb("systeminfo.mac.eth0", 1, null, null, null, "00:00:00:00:00:00");
				param DHCPServerEnable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "1");
				param DHCPRelay bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0");
				param X_NETCOMM_DHCPRelayAddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## DHCP Relay Server address
				param MinAddress string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param MaxAddress string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param ReservedAddresses string notify(0,0,2) readonly dynamic('lanDevice_HostConf', "");  ## Comma-separated list of reserved addresses
				param SubnetMask string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "255.255.255.0");
				param DNSServers string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## Comma-separated list of at most two DNS servers offered to DHCP clients. Not to set specific DNS address, leave the address empty or set to "0.0.0.0"
				param DomainName string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param IPRouters string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## Support only one gateway address (Currently LAN IP is used as a gatway address, so the value applied to this parameter is also applied to the LAN IP address of a router)
				param DHCPLeaseTime int notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "86400");  ## -1(infinite lease) does not support.

				param IPInterfaceNumberOfEntries uint notify(0,0,2) readonly const("1");
				collection IPInterface const("") {
					object 1 {
						param Enable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "2");
						param IPInterfaceIPAddress string notify(0,0,2) readwrite rdb("vlan.0.address", 1, null, null, null, "10.90.0.14");
						param IPInterfaceSubnetMask string notify(0,0,2) readwrite rdb("vlan.0.netmask", 1, null, null, null, "255.255.255.240");
						param IPInterfaceAddressingType string notify(0,0,2) readonly const("Static"); # Supported only "Static"
					};
				};

				param DHCPStaticAddressNumberOfEntries uint notify(0,0,2) readonly dynamic('lanDevice_HostConf', "");
				collection DHCPStaticAddress dynamic('lanDevice_HostConf', "") {  ## Supported AddObject/DeleteObject methods
					default {
						param Enable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0");
						param Chaddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "00:00:00:00:00:00");  ## Should be "xx:xx:xx:xx:xx:xx"
						param Yiaddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0.0.0.0");
						param X_NETCOMM_ComputerName string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
					};
				};
			};
			param LANEthernetInterfaceNumberOfEntries uint notify(0,0,2) readonly const("0");
			param LANUSBInterfaceNumberOfEntries uint notify(0,0,2) readonly const("0");
			object Hosts {
				param HostNumberOfEntries uint notify(0,0,2) readonly dynamic('dhcp', "1");
				collection Host dynamic('dhcp', "0") {
					default {
						param IPAddress string notify(0,0,2) readonly dynamic('dhcp', "");
						param AddressSource string notify(0,0,2) readonly const("DHCP");
						param LeaseTimeRemaining int notify(0,0,2) readonly dynamic('dhcp', "-1");
						param MACAddress string notify(0,0,2) readonly dynamic('dhcp', "");
						param HostName string notify(0,0,2) readonly dynamic('dhcp', "");
						param InterfaceType string notify(0,0,2) readonly dynamic('dhcp', "");
						param Active bool notify(0,0,2) readonly const("1");
					};
				};
			};
		};
		
		object 3 {
			object LANHostConfigManagement {
				param MACAddress string notify(0,0,2) readonly rdb("systeminfo.mac.eth0", 1, null, null, null, "00:00:00:00:00:00");
				param DHCPServerEnable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "1");
				param DHCPRelay bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0");
				param X_NETCOMM_DHCPRelayAddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## DHCP Relay Server address
				param MinAddress string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param MaxAddress string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param ReservedAddresses string notify(0,0,2) readonly dynamic('lanDevice_HostConf', "");  ## Comma-separated list of reserved addresses
				param SubnetMask string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "255.255.255.0");
				param DNSServers string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## Comma-separated list of at most two DNS servers offered to DHCP clients. Not to set specific DNS address, leave the address empty or set to "0.0.0.0"
				param DomainName string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
				param IPRouters string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");  ## Support only one gateway address (Currently LAN IP is used as a gatway address, so the value applied to this parameter is also applied to the LAN IP address of a router)
				param DHCPLeaseTime int notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "86400");  ## -1(infinite lease) does not support.

				param IPInterfaceNumberOfEntries uint notify(0,0,2) readonly const("1");
				collection IPInterface const("") {
					object 1 {
						param Enable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "3");
						param IPInterfaceIPAddress string notify(0,0,2) readwrite rdb("vlan.1.address", 1, null, null, null, "172.24.0.30");
						param IPInterfaceSubnetMask string notify(0,0,2) readwrite rdb("vlan.1.netmask", 1, null, null, null, "255.255.255.224");
						param IPInterfaceAddressingType string notify(0,0,2) readonly const("Static"); # Supported only "Static"
					};
				};

				param DHCPStaticAddressNumberOfEntries uint notify(0,0,2) readonly dynamic('lanDevice_HostConf', "");
				collection DHCPStaticAddress dynamic('lanDevice_HostConf', "") {  ## Supported AddObject/DeleteObject methods
					default {
						param Enable bool notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0");
						param Chaddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "00:00:00:00:00:00");  ## Should be "xx:xx:xx:xx:xx:xx"
						param Yiaddr string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "0.0.0.0");
						param X_NETCOMM_ComputerName string notify(0,0,2) readwrite dynamic('lanDevice_HostConf', "");
					};
				};
			};
			param LANEthernetInterfaceNumberOfEntries uint notify(0,0,2) readonly const("0");
			param LANUSBInterfaceNumberOfEntries uint notify(0,0,2) readonly const("0");
			object Hosts {
				param HostNumberOfEntries uint notify(0,0,2) readonly dynamic('dhcp', "1");
				collection Host dynamic('dhcp', "0") {
					default {
						param IPAddress string notify(0,0,2) readonly dynamic('dhcp', "");
						param AddressSource string notify(0,0,2) readonly const("DHCP");
						param LeaseTimeRemaining int notify(0,0,2) readonly dynamic('dhcp', "-1");
						param MACAddress string notify(0,0,2) readonly dynamic('dhcp', "");
						param HostName string notify(0,0,2) readonly dynamic('dhcp', "");
						param InterfaceType string notify(0,0,2) readonly dynamic('dhcp', "");
						param Active bool notify(0,0,2) readonly const("1");
					};
				};
			};
		};
		
	};
};

// END OF FILE: Do Not delete this line
