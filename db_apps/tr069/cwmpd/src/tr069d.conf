object InternetGatewayDevice {
	param DeviceSummary string notify(1,1,2) readonly const("InternetGatewayDevice:1.1[](Baseline:1)");

	object DeviceInfo {
		param Manufacturer string notify(0,0,2) readonly const("NetComm Limited");
		param ManufacturerOUI string notify(0,0,2) readonly const("001D85");
		param ModelName string notify(0,0,2) readonly rdb("system.product.model", 1, 0, 64, null, "NBN-WNTD");
		param Description string notify(0,0,2) readonly rdb("system.product.title", 1, 0, 256, null, "NetComm Cellular Router");
		param ProductClass string notify(0,0,2) readonly rdb("system.product.class", 1, 0, 64, null, "NBN-WNTD");
		param SerialNumber string notify(0,0,2) readonly rdb("systeminfo.serialnumber", 1, 0, 64, null, "00000000");
		param HardwareVersion string notify(1,1,2) readonly rdb("version.hardware", 1, 0, 64, null, "N/A");
		param SoftwareVersion string notify(2,2,2) readonly rdb("version.software", 1, 0, 64, null, "N/A");
		param ModemFirmwareVersion string notify(0,0,2) readonly rdb("wwan.0.firmware_version", 0, 0, 64, null, "N/A");
		param SpecVersion string notify(1,1,2) readonly const("1.0");
		param ProvisioningCode string notify(2,2,2) readwrite rdb("tr069.state.provisioning_code", 1, 0, 64, null, "");
		param UpTime uint notify(0,0,1) readonly const(0);
#		param UpTime uint notify(0,0,1) readonly dynamic('time', 0); # NTP time handler also supports UpTime
		param DeviceLog string notify(0,0,1) readonly const("");
	};

	object ManagementServer {
		param URL string notify(0,0,2) readwrite rdb("tr069.server.url", 1, 1, 256, 'URL', "http://localhost/acs/cwmp.php");
		param Username string notify(0,0,2) readwrite rdb("tr069.server.username", 1, 0, 256, null, "acs");
		param Password string notify(0,0,2) writeonly rdb("tr069.server.password", 1, 0, 256, null, "acs");
		param PeriodicInformEnable bool notify(0,0,2) readwrite rdb("tr069.server.periodic.enable", 1, null, null, null, 1);
		param PeriodicInformInterval uint notify(0,0,2) readwrite rdb("tr069.server.periodic.interval", 1, 1, null, null, 60);
		param PeriodicInformTime datetime notify(0,0,2) readwrite rdb("tr069.server.periodic.time", 1, null, null, null, 0);
		param ParameterKey string notify(1,1,2) readwrite rdb("tr069.server.paramkey", 1, 0, 32, null, "");
		param ConnectionRequestURL string notify(2,1,2) readonly const("http://localhost:8192/");
		param ConnectionRequestUsername string notify(0,0,2) readwrite rdb("tr069.server.request.username", 1, 0, 256, null, "cpe");
		param ConnectionRequestPassword string notify(0,0,2) writeonly rdb("tr069.server.request.password", 1, 0, 256, null, "cpe");
		param UpgradesManaged bool notify(0,0,2) readwrite rdb("tr069.server.upgrades_managed", 1, null, null, null, 0);
	};

	object LANConfigSecurity {
		param ConfigPassword string notify(0,0,2) writeonly rdb("admin.user.admin", 1, 0, 64, null, "");
	};
	
	collection Test transient('') {
		default {
			param Zero bool notify(0,0,2) readwrite transient(0);
			param One string notify(0,0,2) readwrite transient("one");
			param Two int notify(0,0,2) readwrite transient(2);
			param Three uint notify(0,0,2) readwrite transient(3);
			param Four datetime notify(0,0,2) readwrite transient(4);
		};
	};
};
